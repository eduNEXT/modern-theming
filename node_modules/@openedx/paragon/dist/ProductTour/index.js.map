{"version":3,"file":"index.js","names":["React","useEffect","useState","PropTypes","Checkpoint","ProductTour","forwardRef","_ref","ref","tours","tourValue","find","tour","enabled","checkpoints","startingIndex","onEscape","onEnd","onDismiss","tourOnDismiss","advanceButtonText","tourAdvanceButtonText","dismissButtonText","tourDismissButtonText","endButtonText","tourEndButtonText","currentCheckpointData","setCurrentCheckpointData","index","setIndex","isTourEnabled","setIsTourEnabled","prunedCheckpoints","setPrunedCheckpoints","title","body","onAdvance","placement","target","showDismissButton","pruneCheckpoints","checkpointList","checkpointsWithRenderedTargets","filter","checkpoint","document","querySelector","length","handleEsc","event","key","global","addEventListener","removeEventListener","handleAdvance","handleDismiss","handleEnd","checkpointIndex","createElement","totalCheckpoints","defaultProps","undefined","propTypes","arrayOf","shape","node","func","oneOf","string","isRequired","bool","number","tourId"],"sources":["../../src/ProductTour/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Checkpoint from './Checkpoint';\n\nconst ProductTour = React.forwardRef(({ tours }, ref) => {\n  const tourValue = tours.find((tour) => tour.enabled);\n  const {\n    enabled, checkpoints = [], startingIndex, onEscape, onEnd, onDismiss: tourOnDismiss,\n    advanceButtonText: tourAdvanceButtonText, dismissButtonText: tourDismissButtonText,\n    endButtonText: tourEndButtonText,\n  } = tourValue || {};\n  const [currentCheckpointData, setCurrentCheckpointData] = useState(null);\n  const [index, setIndex] = useState(0);\n  const [isTourEnabled, setIsTourEnabled] = useState(false);\n  const [prunedCheckpoints, setPrunedCheckpoints] = useState([]);\n  const {\n    title, body, onAdvance, onDismiss, advanceButtonText, dismissButtonText,\n    endButtonText, placement, target, showDismissButton,\n  } = currentCheckpointData || {};\n\n  /**\n   * Takes a list of checkpoints and verifies that each target string provided is\n   * an element in the DOM.\n   */\n  const pruneCheckpoints = (checkpointList) => {\n    const checkpointsWithRenderedTargets = checkpointList.filter(\n      (checkpoint) => !!document.querySelector(checkpoint.target),\n    );\n    setPrunedCheckpoints(checkpointsWithRenderedTargets);\n  };\n\n  useEffect(() => {\n    if (enabled && checkpoints) {\n      setIsTourEnabled(enabled);\n      pruneCheckpoints(checkpoints);\n      setIndex(startingIndex || 0);\n    }\n  }, [enabled, checkpoints, startingIndex]);\n\n  useEffect(() => {\n    if (isTourEnabled && prunedCheckpoints.length) {\n      setCurrentCheckpointData(prunedCheckpoints[index]);\n    }\n  }, [index, isTourEnabled, prunedCheckpoints]);\n\n  useEffect(() => {\n    const handleEsc = (event) => {\n      if (event.key === 'Escape') {\n        setIsTourEnabled(false);\n        if (onEscape) {\n          onEscape();\n        }\n      }\n    };\n    global.addEventListener('keydown', handleEsc);\n\n    return () => {\n      global.removeEventListener('keydown', handleEsc);\n    };\n  }, [onEscape]);\n\n  if (!tourValue || !currentCheckpointData || !isTourEnabled) {\n    return null;\n  }\n\n  const handleAdvance = () => {\n    setIndex(index + 1);\n    if (onAdvance) {\n      onAdvance();\n    }\n  };\n\n  const handleDismiss = () => {\n    setIndex(0);\n    setIsTourEnabled(false);\n    if (onDismiss) {\n      onDismiss();\n    } else {\n      tourOnDismiss();\n    }\n    setCurrentCheckpointData(null);\n  };\n  /* eslint-disable */\n  /**\n   * Takes the final checkpoint array index value and looks for an existing onEnd callback.\n   * \n   * If an onEnd callback exist on checkpointIndex value and it is the final checkpoint \n   * in the array, the onEnd callback will be called for the parent, and individual onEnd object. \n   * \n   * @param {Integer} checkpointIndex \n   */\n  /* eslint-enable */\n  const handleEnd = (checkpointIndex) => {\n    setIndex(0);\n    setIsTourEnabled(false);\n    if (prunedCheckpoints[checkpointIndex].onEnd) {\n      prunedCheckpoints[checkpointIndex].onEnd();\n    } else if (onEnd) {\n      onEnd(prunedCheckpoints[checkpointIndex]);\n    }\n    setCurrentCheckpointData(null);\n  };\n  return (\n    <Checkpoint\n      advanceButtonText={advanceButtonText || tourAdvanceButtonText}\n      body={body}\n      currentCheckpointData={currentCheckpointData}\n      dismissButtonText={dismissButtonText || tourDismissButtonText}\n      endButtonText={endButtonText || tourEndButtonText}\n      index={index}\n      onAdvance={handleAdvance}\n      onDismiss={handleDismiss}\n      onEnd={handleEnd}\n      placement={placement}\n      target={target}\n      title={title}\n      totalCheckpoints={prunedCheckpoints.length}\n      showDismissButton={showDismissButton}\n      ref={ref}\n    />\n  );\n});\n\nProductTour.defaultProps = {\n  tours: {\n    advanceButtonText: '',\n    checkpoints: {\n      advanceButtonText: '',\n      body: '',\n      dismissButtonText: '',\n      endButtonText: '',\n      onAdvance: () => {},\n      onDismiss: () => {},\n      placement: 'top',\n      title: '',\n      showDismissButton: undefined,\n    },\n    dismissButtonText: '',\n    endButtonText: '',\n    onDismiss: () => {},\n    onEnd: () => {},\n    onEscape: () => {},\n    startingIndex: 0,\n  },\n};\n\nProductTour.propTypes = {\n  tours: PropTypes.arrayOf(PropTypes.shape({\n    /** The text displayed on all buttons used to advance the tour. */\n    advanceButtonText: PropTypes.node,\n    /** An array comprised of checkpoint objects supporting the following values: */\n    checkpoints: PropTypes.arrayOf(PropTypes.shape({\n      /** The text displayed on the button used to advance the tour for the given Checkpoint\n       * (overrides the* `advanceButtonText` defined in the parent tour object). */\n      advanceButtonText: PropTypes.node,\n      /** The text displayed in the body of the Checkpoint */\n      body: PropTypes.node,\n      /** The text displayed on the button used to dismiss the tour for the given Checkpoint\n       * (overrides the `dismissButtonText` defined in the parent tour object). */\n      dismissButtonText: PropTypes.node,\n      /** The text displayed on the button used to end the tour for the given Checkpoint\n       * (overrides the `endButtonText` defined in the parent tour object). */\n      endButtonText: PropTypes.node,\n      /** A function that runs when triggering the `onClick` event of the advance\n       * button for the given Checkpoint. */\n      onAdvance: PropTypes.func,\n      /** A function that runs when triggering the `onClick` event of the dismiss\n       * button for the given Checkpoint (overrides the `onDismiss` function defined in the parent tour object). */\n      onDismiss: PropTypes.func,\n      /** A function that runs when triggering the `onClick` event of the advance\n      * button if the given Checkpoint is the only or last Checkpoint in a tour. */\n      onEnd: PropTypes.func,\n      /** A string that dictates the alignment of the Checkpoint around its target. */\n      placement: PropTypes.oneOf([\n        'top', 'top-start', 'top-end', 'right-start', 'right', 'right-end',\n        'left-start', 'left', 'left-end', 'bottom', 'bottom-start', 'bottom-end',\n      ]),\n      /** The CSS selector for the Checkpoint's desired target. */\n      target: PropTypes.string.isRequired,\n      /** The text displayed in the title of the Checkpoint */\n      title: PropTypes.node,\n      /** Enforces visibility of the dismiss button under all circumstances */\n      showDismissButton: PropTypes.bool,\n    })),\n    /** The text displayed on the button used to dismiss the tour. */\n    dismissButtonText: PropTypes.node,\n    /** Whether the tour is enabled. If there are multiple tours defined, only one should be enabled at a time. */\n    enabled: PropTypes.bool.isRequired,\n    /** The text displayed on the button used to end the tour. */\n    endButtonText: PropTypes.node,\n    /** A function that runs when triggering the `onClick` event of the dismiss button. */\n    onDismiss: PropTypes.func,\n    /** A function that runs when triggering the `onClick` event of the end button. */\n    onEnd: PropTypes.func,\n    /** A function that runs when pressing the Escape key. */\n    onEscape: PropTypes.func,\n    /** The index of the desired `Checkpoint` to render when the tour starts. */\n    startingIndex: PropTypes.number,\n    /** The ID of the tour */\n    tourId: PropTypes.string.isRequired,\n  })),\n};\n\nexport default ProductTour;\n"],"mappings":"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","ignoreList":[]}