{"version":3,"file":"FormControlSet.js","names":["React","PropTypes","classNames","FormControlSet","_ref","as","className","isInline","children","props","createElement","propTypes","elementType","string","bool","node","defaultProps","undefined"],"sources":["../../src/Form/FormControlSet.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nfunction FormControlSet({\n  as,\n  className,\n  isInline,\n  children,\n  ...props\n}) {\n  return React.createElement(as, {\n    className: classNames(\n      className,\n      {\n        'pgn__form-control-set': !isInline,\n        'pgn__form-control-set-inline': isInline,\n      },\n    ),\n    ...props,\n  }, children);\n}\n\nFormControlSet.propTypes = {\n  /** Specifies the base element */\n  as: PropTypes.elementType,\n  /** A class name to append to the base element. */\n  className: PropTypes.string,\n  /** Specifies whether the component should be displayed with inline styling. */\n  isInline: PropTypes.bool,\n  /** Specifies contents of the component. */\n  children: PropTypes.node,\n};\n\nFormControlSet.defaultProps = {\n  as: 'div',\n  className: undefined,\n  isInline: false,\n  children: null,\n};\n\nexport default FormControlSet;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,UAAU,MAAM,YAAY;AAEnC,SAASC,cAAcA,CAAAC,IAAA,EAMpB;EAAA,IANqB;IACtBC,EAAE;IACFC,SAAS;IACTC,QAAQ;IACRC,QAAQ;IACR,GAAGC;EACL,CAAC,GAAAL,IAAA;EACC,oBAAOJ,KAAK,CAACU,aAAa,CAACL,EAAE,EAAE;IAC7BC,SAAS,EAAEJ,UAAU,CACnBI,SAAS,EACT;MACE,uBAAuB,EAAE,CAACC,QAAQ;MAClC,8BAA8B,EAAEA;IAClC,CACF,CAAC;IACD,GAAGE;EACL,CAAC,EAAED,QAAQ,CAAC;AACd;AAEAL,cAAc,CAACQ,SAAS,GAAG;EACzB;EACAN,EAAE,EAAEJ,SAAS,CAACW,WAAW;EACzB;EACAN,SAAS,EAAEL,SAAS,CAACY,MAAM;EAC3B;EACAN,QAAQ,EAAEN,SAAS,CAACa,IAAI;EACxB;EACAN,QAAQ,EAAEP,SAAS,CAACc;AACtB,CAAC;AAEDZ,cAAc,CAACa,YAAY,GAAG;EAC5BX,EAAE,EAAE,KAAK;EACTC,SAAS,EAAEW,SAAS;EACpBV,QAAQ,EAAE,KAAK;EACfC,QAAQ,EAAE;AACZ,CAAC;AAED,eAAeL,cAAc","ignoreList":[]}