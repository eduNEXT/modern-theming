{"version":3,"file":"FormControl.js","names":["React","useCallback","useEffect","PropTypes","classNames","RBFormControl","IMaskInput","useFormGroupContext","FormControlFeedback","FormControlDecoratorGroup","callAllHandlers","useHasValue","FormControl","forwardRef","_ref","ref","as","className","controlClassName","leadingElement","trailingElement","floatingLabel","autoResize","onChange","inputMask","props","isInvalid","isValid","getControlProps","formGroupContext","inputRef","useRef","resolvedRef","size","hasValue","checkInputEventValue","defaultValue","value","handleResize","current","initialHeight","offsets","offsetHeight","clientHeight","style","height","scrollHeight","controlProps","onBlur","handleOnChange","e","createElement","mask","SIZE_CHOICES","Feedback","Description","propTypes","string","elementType","func","oneOfType","number","id","oneOf","node","plaintext","bool","defaultProps","undefined"],"sources":["../../src/Form/FormControl.jsx"],"sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport RBFormControl from 'react-bootstrap/FormControl';\nimport { IMaskInput } from 'react-imask';\nimport { useFormGroupContext } from './FormGroupContext';\nimport FormControlFeedback from './FormControlFeedback';\nimport FormControlDecoratorGroup from './FormControlDecoratorGroup';\n\nimport { callAllHandlers, useHasValue } from './fieldUtils';\n\nconst FormControl = React.forwardRef(({\n  as,\n  className,\n  controlClassName,\n  leadingElement,\n  trailingElement,\n  floatingLabel,\n  autoResize,\n  onChange,\n  inputMask,\n  ...props\n}, ref) => {\n  const {\n    isInvalid,\n    isValid,\n    getControlProps,\n    ...formGroupContext\n  } = useFormGroupContext();\n  const inputRef = React.useRef();\n  const resolvedRef = ref || inputRef;\n  const size = props.size || formGroupContext.size;\n\n  const [hasValue, checkInputEventValue] = useHasValue({\n    defaultValue: props.defaultValue,\n    value: props.value,\n  });\n\n  const handleResize = useCallback(() => {\n    if (as === 'textarea' && autoResize) {\n      if (!resolvedRef.current.initialHeight && !resolvedRef.current.offsets) {\n        resolvedRef.current.initialHeight = resolvedRef.current.offsetHeight;\n        resolvedRef.current.offsets = resolvedRef.current.offsetHeight - resolvedRef.current.clientHeight;\n      }\n      resolvedRef.current.style.height = `${resolvedRef.current.initialHeight}px`;\n      resolvedRef.current.style.height = `${resolvedRef.current.scrollHeight + resolvedRef.current.offsets}px`;\n    }\n  }, [as, autoResize, resolvedRef]);\n\n  useEffect(() => {\n    handleResize();\n  }, [handleResize]);\n\n  const controlProps = getControlProps({\n    ...props,\n    // eslint-disable-next-line react/prop-types\n    onBlur: callAllHandlers(checkInputEventValue, props.onBlur),\n  });\n\n  const handleOnChange = (e) => {\n    handleResize();\n    if (onChange) {\n      onChange(e);\n    }\n  };\n\n  return (\n    <FormControlDecoratorGroup\n      size={size}\n      leadingElement={leadingElement}\n      trailingElement={trailingElement}\n      floatingLabel={floatingLabel}\n      className={className}\n    >\n      <RBFormControl\n        as={inputMask ? IMaskInput : as}\n        ref={resolvedRef}\n        size={size}\n        isInvalid={isInvalid}\n        isValid={isValid}\n        className={classNames(controlClassName, {\n          'has-value': hasValue,\n        })}\n        onChange={handleOnChange}\n        mask={inputMask}\n        {...controlProps}\n      />\n    </FormControlDecoratorGroup>\n  );\n});\n\nconst SIZE_CHOICES = ['sm', 'lg'];\n\nFormControl.Feedback = FormControlFeedback;\nFormControl.Description = FormControlFeedback;\n\nFormControl.propTypes = {\n  /** Specifies class name to append to the base element. */\n  className: PropTypes.string,\n  /** Specifies base element for the control component. */\n  as: PropTypes.elementType,\n  /** Specifies function that is triggered on input value change. */\n  onChange: PropTypes.func,\n  /** Specifies default value of the input component. */\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /** Specifies current value of the input component. */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /** Specifies id of the control component. */\n  id: PropTypes.string,\n  /** Specifies class name for the control component. */\n  controlClassName: PropTypes.string,\n  /** Specifies size for the control component. */\n  size: PropTypes.oneOf(SIZE_CHOICES),\n  /** Specifies leading element to display for the input component. */\n  leadingElement: PropTypes.node,\n  /** Specifies trailing element to display for the input component. */\n  trailingElement: PropTypes.node,\n  /** Specifies floating label to display for the input component. */\n  floatingLabel: PropTypes.node,\n  /** Specifies whether to render input as plain text. */\n  plaintext: PropTypes.bool,\n  /** Specifies whether to display control in valid state, this affects styling. */\n  isValid: PropTypes.bool,\n  /** Specifies whether to display control in invalid state, this affects styling. */\n  isInvalid: PropTypes.bool,\n  /** Only for `as=\"textarea\"`. Specifies whether the input can be resized according to the height of content. */\n  autoResize: PropTypes.bool,\n  /** Specifies what format to use for the input mask. */\n  inputMask: PropTypes.string,\n};\n\nFormControl.defaultProps = {\n  as: 'input',\n  className: undefined,\n  id: undefined,\n  controlClassName: undefined,\n  onChange: undefined,\n  defaultValue: undefined,\n  value: undefined,\n  size: undefined,\n  leadingElement: undefined,\n  trailingElement: undefined,\n  floatingLabel: undefined,\n  plaintext: false,\n  isValid: undefined,\n  isInvalid: undefined,\n  autoResize: false,\n  inputMask: undefined,\n};\n\nexport default FormControl;\n"],"mappings":"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","ignoreList":[]}