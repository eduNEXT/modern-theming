{"version":3,"file":"FormSwitch.js","names":["React","PropTypes","classNames","FormCheckbox","useFormGroupContext","SwitchControl","forwardRef","_ref","ref","isIndeterminate","props","defaultRef","useRef","resolvedRef","getControlProps","checkboxProps","className","useEffect","current","indeterminate","createElement","type","propTypes","bool","string","defaultProps","undefined","FormSwitch","_ref2","children","helperText","role","controlAs","isValid","isInvalid","description","node","isRequired","labelClassName","floatLabelLeft"],"sources":["../../src/Form/FormSwitch.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FormCheckbox from './FormCheckbox';\nimport { useFormGroupContext } from './FormGroupContext';\n\nconst SwitchControl = React.forwardRef(\n  ({ isIndeterminate, ...props }, ref) => {\n    const defaultRef = React.useRef();\n    const resolvedRef = ref || defaultRef;\n    const { getControlProps } = useFormGroupContext();\n    const checkboxProps = getControlProps({\n      ...props,\n      className: classNames(\n        'pgn__form-switch-input',\n        props.className,\n      ),\n    });\n\n    React.useEffect(() => {\n      // this if(resolvedRef.current) prevents console errors in testing\n      if (resolvedRef.current) {\n        resolvedRef.current.indeterminate = isIndeterminate;\n      }\n    }, [resolvedRef, isIndeterminate]);\n\n    return (\n      <input\n        type=\"checkbox\"\n        {...checkboxProps}\n        ref={resolvedRef}\n      />\n    );\n  },\n);\n\nSwitchControl.propTypes = {\n  /** Specifies whether input should be rendered in indeterminate state. */\n  isIndeterminate: PropTypes.bool,\n  /** Specifies class name to append to the base element. */\n  className: PropTypes.string,\n};\n\nSwitchControl.defaultProps = {\n  isIndeterminate: false,\n  className: undefined,\n};\n\nconst FormSwitch = React.forwardRef(({\n  children,\n  className,\n  helperText,\n  ...props\n}, ref) => (\n  <div className=\"d-inline-flex flex-column\">\n    <FormCheckbox\n      className={classNames('pgn__form-switch', className)}\n      {...props}\n      role=\"switch\"\n      ref={ref}\n      controlAs={SwitchControl}\n      // ignore the following props for form switch\n      isValid={null}\n      isInvalid={null}\n      description={null}\n    >\n      {children}\n    </FormCheckbox>\n    {helperText && (\n      <div className=\"pgn__form-switch-helper-text\">\n        {helperText}\n      </div>\n    )}\n  </div>\n));\n\nFormSwitch.propTypes = {\n  /** Specifies contents of the component. */\n  children: PropTypes.node.isRequired,\n  /** Specifies class name to append to the base element. */\n  className: PropTypes.string,\n  /** Specifies class name to append to the label element. */\n  labelClassName: PropTypes.string,\n  /** Specifies helper text to display below the switch. */\n  helperText: PropTypes.node,\n  /** Determines whether the label should float to the left when the switch is active. */\n  floatLabelLeft: PropTypes.bool,\n};\n\nFormSwitch.defaultProps = {\n  className: undefined,\n  labelClassName: undefined,\n  helperText: undefined,\n  floatLabelLeft: false,\n};\n\nexport { SwitchControl };\nexport default FormSwitch;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,mBAAmB,QAAQ,oBAAoB;AAExD,MAAMC,aAAa,gBAAGL,KAAK,CAACM,UAAU,CACpC,CAAAC,IAAA,EAAgCC,GAAG,KAAK;EAAA,IAAvC;IAAEC,eAAe;IAAE,GAAGC;EAAM,CAAC,GAAAH,IAAA;EAC5B,MAAMI,UAAU,GAAGX,KAAK,CAACY,MAAM,CAAC,CAAC;EACjC,MAAMC,WAAW,GAAGL,GAAG,IAAIG,UAAU;EACrC,MAAM;IAAEG;EAAgB,CAAC,GAAGV,mBAAmB,CAAC,CAAC;EACjD,MAAMW,aAAa,GAAGD,eAAe,CAAC;IACpC,GAAGJ,KAAK;IACRM,SAAS,EAAEd,UAAU,CACnB,wBAAwB,EACxBQ,KAAK,CAACM,SACR;EACF,CAAC,CAAC;EAEFhB,KAAK,CAACiB,SAAS,CAAC,MAAM;IACpB;IACA,IAAIJ,WAAW,CAACK,OAAO,EAAE;MACvBL,WAAW,CAACK,OAAO,CAACC,aAAa,GAAGV,eAAe;IACrD;EACF,CAAC,EAAE,CAACI,WAAW,EAAEJ,eAAe,CAAC,CAAC;EAElC,oBACET,KAAA,CAAAoB,aAAA;IACEC,IAAI,EAAC,UAAU;IAAA,GACXN,aAAa;IACjBP,GAAG,EAAEK;EAAY,CAClB,CAAC;AAEN,CACF,CAAC;AAEDR,aAAa,CAACiB,SAAS,GAAG;EACxB;EACAb,eAAe,EAAER,SAAS,CAACsB,IAAI;EAC/B;EACAP,SAAS,EAAEf,SAAS,CAACuB;AACvB,CAAC;AAEDnB,aAAa,CAACoB,YAAY,GAAG;EAC3BhB,eAAe,EAAE,KAAK;EACtBO,SAAS,EAAEU;AACb,CAAC;AAED,MAAMC,UAAU,gBAAG3B,KAAK,CAACM,UAAU,CAAC,CAAAsB,KAAA,EAKjCpB,GAAG;EAAA,IAL+B;IACnCqB,QAAQ;IACRb,SAAS;IACTc,UAAU;IACV,GAAGpB;EACL,CAAC,GAAAkB,KAAA;EAAA,oBACC5B,KAAA,CAAAoB,aAAA;IAAKJ,SAAS,EAAC;EAA2B,gBACxChB,KAAA,CAAAoB,aAAA,CAACjB,YAAY;IACXa,SAAS,EAAEd,UAAU,CAAC,kBAAkB,EAAEc,SAAS,CAAE;IAAA,GACjDN,KAAK;IACTqB,IAAI,EAAC,QAAQ;IACbvB,GAAG,EAAEA,GAAI;IACTwB,SAAS,EAAE3B;IACX;IAAA;IACA4B,OAAO,EAAE,IAAK;IACdC,SAAS,EAAE,IAAK;IAChBC,WAAW,EAAE;EAAK,GAEjBN,QACW,CAAC,EACdC,UAAU,iBACT9B,KAAA,CAAAoB,aAAA;IAAKJ,SAAS,EAAC;EAA8B,GAC1Cc,UACE,CAEJ,CAAC;AAAA,CACP,CAAC;AAEFH,UAAU,CAACL,SAAS,GAAG;EACrB;EACAO,QAAQ,EAAE5B,SAAS,CAACmC,IAAI,CAACC,UAAU;EACnC;EACArB,SAAS,EAAEf,SAAS,CAACuB,MAAM;EAC3B;EACAc,cAAc,EAAErC,SAAS,CAACuB,MAAM;EAChC;EACAM,UAAU,EAAE7B,SAAS,CAACmC,IAAI;EAC1B;EACAG,cAAc,EAAEtC,SAAS,CAACsB;AAC5B,CAAC;AAEDI,UAAU,CAACF,YAAY,GAAG;EACxBT,SAAS,EAAEU,SAAS;EACpBY,cAAc,EAAEZ,SAAS;EACzBI,UAAU,EAAEJ,SAAS;EACrBa,cAAc,EAAE;AAClB,CAAC;AAED,SAASlC,aAAa;AACtB,eAAesB,UAAU","ignoreList":[]}