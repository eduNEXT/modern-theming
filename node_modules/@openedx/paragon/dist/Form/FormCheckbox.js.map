{"version":3,"file":"FormCheckbox.js","names":["React","PropTypes","classNames","useCheckboxSetContext","FormGroupContextProvider","useFormGroupContext","FormLabel","FormControlFeedback","CheckboxControl","forwardRef","_ref","ref","isIndeterminate","props","getCheckboxControlProps","hasCheckboxSetProvider","defaultRef","useRef","resolvedRef","getControlProps","checkboxProps","className","useEffect","current","indeterminate","createElement","type","propTypes","bool","string","defaultProps","undefined","FormCheckbox","_ref2","children","controlClassName","labelClassName","description","isInvalid","isValid","controlAs","floatLabelLeft","hasFormGroupProvider","useSetIsControlGroupEffect","shouldActAsGroup","groupProps","role","control","controlId","id","disabled","hasIcon","node","isRequired","elementType"],"sources":["../../src/Form/FormCheckbox.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useCheckboxSetContext } from './FormCheckboxSetContext';\nimport { FormGroupContextProvider, useFormGroupContext } from './FormGroupContext';\nimport FormLabel from './FormLabel';\nimport FormControlFeedback from './FormControlFeedback';\n\nconst CheckboxControl = React.forwardRef(\n  ({ isIndeterminate, ...props }, ref) => {\n    const { getCheckboxControlProps, hasCheckboxSetProvider } = useCheckboxSetContext();\n    const defaultRef = React.useRef();\n    const resolvedRef = ref || defaultRef;\n    const { getControlProps } = useFormGroupContext();\n    let checkboxProps = getControlProps({\n      ...props,\n      className: classNames('pgn__form-checkbox-input', props.className),\n    });\n\n    if (hasCheckboxSetProvider) {\n      checkboxProps = getCheckboxControlProps(checkboxProps);\n    }\n\n    React.useEffect(() => {\n      // this if(resolvedRef.current) prevents console errors in testing\n      if (resolvedRef.current) {\n        resolvedRef.current.indeterminate = isIndeterminate;\n      }\n    }, [resolvedRef, isIndeterminate]);\n\n    return (\n      <input\n        type=\"checkbox\"\n        {...checkboxProps}\n        ref={resolvedRef}\n      />\n    );\n  },\n);\n\nCheckboxControl.propTypes = {\n  /** Specifies whether the checkbox should be rendered in indeterminate state. */\n  isIndeterminate: PropTypes.bool,\n  /** Specifies class name to append to the base element. */\n  className: PropTypes.string,\n};\n\nCheckboxControl.defaultProps = {\n  isIndeterminate: false,\n  className: undefined,\n};\n\nconst FormCheckbox = React.forwardRef(({\n  children,\n  className,\n  controlClassName,\n  labelClassName,\n  description,\n  isInvalid,\n  isValid,\n  controlAs,\n  floatLabelLeft,\n  ...props\n}, ref) => {\n  const { hasCheckboxSetProvider } = useCheckboxSetContext();\n  const { hasFormGroupProvider, useSetIsControlGroupEffect, getControlProps } = useFormGroupContext();\n  useSetIsControlGroupEffect(true);\n  const shouldActAsGroup = hasFormGroupProvider && !hasCheckboxSetProvider;\n  const groupProps = shouldActAsGroup ? {\n    ...getControlProps({}),\n    role: 'group',\n  } : {};\n\n  const control = React.createElement(controlAs, { ...props, className: controlClassName, ref });\n  return (\n    <FormGroupContextProvider\n      controlId={props.id}\n      isInvalid={isInvalid}\n      isValid={isValid}\n    >\n      <div\n        className={classNames('pgn__form-checkbox', className, {\n          'pgn__form-control-valid': isValid,\n          'pgn__form-control-invalid': isInvalid,\n          'pgn__form-control-disabled': props.disabled,\n          'pgn__form-control-label-left': !!floatLabelLeft,\n        })}\n        {...groupProps}\n      >\n        {control}\n        <div>\n          <FormLabel className={labelClassName}>\n            {children}\n          </FormLabel>\n          {description && (\n            <FormControlFeedback hasIcon={false}>\n              {description}\n            </FormControlFeedback>\n          )}\n        </div>\n      </div>\n    </FormGroupContextProvider>\n  );\n});\n\nFormCheckbox.propTypes = {\n  /** Specifies id of the FormCheckbox component. */\n  id: PropTypes.string,\n  /** Specifies contents of the component. */\n  children: PropTypes.node.isRequired,\n  /** Specifies class name to append to the base element. */\n  className: PropTypes.string,\n  /** Specifies class name for control component. */\n  controlClassName: PropTypes.string,\n  /** Specifies class name for label component. */\n  labelClassName: PropTypes.string,\n  /** Specifies description to show under the checkbox. */\n  description: PropTypes.node,\n  /** Specifies whether to display checkbox in invalid state, this affects styling. */\n  isInvalid: PropTypes.bool,\n  /** Specifies whether to display checkbox in valid state, this affects styling. */\n  isValid: PropTypes.bool,\n  /** Specifies control element. */\n  controlAs: PropTypes.elementType,\n  /** Specifies whether the floating label should be aligned to the left. */\n  floatLabelLeft: PropTypes.bool,\n  /** Specifies whether the `FormCheckbox` is disabled. */\n  disabled: PropTypes.bool,\n};\n\nFormCheckbox.defaultProps = {\n  id: undefined,\n  className: undefined,\n  controlClassName: undefined,\n  labelClassName: undefined,\n  description: undefined,\n  isInvalid: false,\n  isValid: false,\n  controlAs: CheckboxControl,\n  floatLabelLeft: false,\n  disabled: false,\n};\n\nexport { CheckboxControl };\nexport default FormCheckbox;\n"],"mappings":"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","ignoreList":[]}