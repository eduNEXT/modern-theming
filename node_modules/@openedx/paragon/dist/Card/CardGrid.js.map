{"version":3,"file":"CardGrid.js","names":["React","useMemo","classNames","PropTypes","Row","Col","CardGrid","_ref","className","children","columnSizes","hasEqualColumnHeights","cards","Children","map","card","createElement","propTypes","string","node","isRequired","shape","xs","number","sm","md","lg","xl","bool","defaultProps","undefined"],"sources":["../../src/Card/CardGrid.jsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction CardGrid({\n  className,\n  children,\n  columnSizes,\n  hasEqualColumnHeights,\n}) {\n  const cards = useMemo(\n    () => React.Children.map(children, (card) => (\n      <Col\n        {...columnSizes}\n        className={classNames(\n          'pgn__card-grid__card-item',\n          {\n            'pgn__card__disable-equal-column-heights': !hasEqualColumnHeights,\n          },\n        )}\n      >\n        {card}\n      </Col>\n    )),\n    [children, columnSizes, hasEqualColumnHeights],\n  );\n\n  return (\n    <div className={classNames('pgn__card-grid', className)}>\n      <Row>\n        {cards}\n      </Row>\n    </div>\n  );\n}\n\nCardGrid.propTypes = {\n  /** The class name for the CardGrid component */\n  className: PropTypes.string,\n  /** The Card components to organize into a responsive grid */\n  children: PropTypes.node.isRequired,\n  /**\n   * An object containing the desired column size at each breakpoint, following a similar\n   * props API as ``react-bootstrap/Col``\n   */\n  columnSizes: PropTypes.shape({\n    xs: PropTypes.number,\n    sm: PropTypes.number,\n    md: PropTypes.number,\n    lg: PropTypes.number,\n    xl: PropTypes.number,\n  }),\n  /** Whether to disable the default equal height cards across rows in the card grid */\n  hasEqualColumnHeights: PropTypes.bool,\n};\n\nCardGrid.defaultProps = {\n  className: undefined,\n  columnSizes: {\n    sm: 12,\n    lg: 6,\n    xl: 4,\n  },\n  hasEqualColumnHeights: true,\n};\n\nexport default CardGrid;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AAErC,SAASC,QAAQA,CAAAC,IAAA,EAKd;EAAA,IALe;IAChBC,SAAS;IACTC,QAAQ;IACRC,WAAW;IACXC;EACF,CAAC,GAAAJ,IAAA;EACC,MAAMK,KAAK,GAAGX,OAAO,CACnB,MAAMD,KAAK,CAACa,QAAQ,CAACC,GAAG,CAACL,QAAQ,EAAGM,IAAI,iBACtCf,KAAA,CAAAgB,aAAA,CAACX,GAAG;IAAA,GACEK,WAAW;IACfF,SAAS,EAAEN,UAAU,CACnB,2BAA2B,EAC3B;MACE,yCAAyC,EAAE,CAACS;IAC9C,CACF;EAAE,GAEDI,IACE,CACN,CAAC,EACF,CAACN,QAAQ,EAAEC,WAAW,EAAEC,qBAAqB,CAC/C,CAAC;EAED,oBACEX,KAAA,CAAAgB,aAAA;IAAKR,SAAS,EAAEN,UAAU,CAAC,gBAAgB,EAAEM,SAAS;EAAE,gBACtDR,KAAA,CAAAgB,aAAA,CAACZ,GAAG,QACDQ,KACE,CACF,CAAC;AAEV;AAEAN,QAAQ,CAACW,SAAS,GAAG;EACnB;EACAT,SAAS,EAAEL,SAAS,CAACe,MAAM;EAC3B;EACAT,QAAQ,EAAEN,SAAS,CAACgB,IAAI,CAACC,UAAU;EACnC;AACF;AACA;AACA;EACEV,WAAW,EAAEP,SAAS,CAACkB,KAAK,CAAC;IAC3BC,EAAE,EAAEnB,SAAS,CAACoB,MAAM;IACpBC,EAAE,EAAErB,SAAS,CAACoB,MAAM;IACpBE,EAAE,EAAEtB,SAAS,CAACoB,MAAM;IACpBG,EAAE,EAAEvB,SAAS,CAACoB,MAAM;IACpBI,EAAE,EAAExB,SAAS,CAACoB;EAChB,CAAC,CAAC;EACF;EACAZ,qBAAqB,EAAER,SAAS,CAACyB;AACnC,CAAC;AAEDtB,QAAQ,CAACuB,YAAY,GAAG;EACtBrB,SAAS,EAAEsB,SAAS;EACpBpB,WAAW,EAAE;IACXc,EAAE,EAAE,EAAE;IACNE,EAAE,EAAE,CAAC;IACLC,EAAE,EAAE;EACN,CAAC;EACDhB,qBAAqB,EAAE;AACzB,CAAC;AAED,eAAeL,QAAQ","ignoreList":[]}