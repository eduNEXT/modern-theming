{"version":3,"file":"CardSection.js","names":["React","useContext","PropTypes","classNames","Skeleton","CardContext","SKELETON_HEIGHT_VALUE","CardSection","forwardRef","_ref","ref","className","children","title","actions","muted","skeletonHeight","skeletonWidth","isLoading","createElement","containerClassName","height","width","propTypes","string","node","bool","number","defaultProps","undefined"],"sources":["../../src/Card/CardSection.jsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Skeleton from 'react-loading-skeleton';\nimport CardContext from './CardContext';\n\nconst SKELETON_HEIGHT_VALUE = 100;\n\nconst CardSection = React.forwardRef(({\n  className,\n  children,\n  title,\n  actions,\n  muted,\n  skeletonHeight,\n  skeletonWidth,\n}, ref) => {\n  const { isLoading } = useContext(CardContext);\n\n  if (isLoading) {\n    return (\n      <div className={classNames('pgn__card-section', className, { 'is-muted': muted })}>\n        <Skeleton\n          containerClassName=\"pgn__card-section-loader\"\n          height={skeletonHeight}\n          width={skeletonWidth}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={classNames('pgn__card-section', className, { 'is-muted': muted })}\n      ref={ref}\n    >\n      {title && <div className=\"pgn__card-section-title\">{title}</div>}\n      {children}\n      {actions && <div className=\"pgn__card-section-actions\">{actions}</div>}\n    </div>\n  );\n});\n\nCardSection.propTypes = {\n  /** Specifies class name to append to the base element. */\n  className: PropTypes.string,\n  /** Specifies contents of the component. */\n  children: PropTypes.node,\n  /** Specifies title of the `Section`. */\n  title: PropTypes.node,\n  /** Specifies node to render on the bottom right of the `Section` (i.e. `ActionRow`). */\n  actions: PropTypes.node,\n  /** Specifies whether to display `Section` with muted styling. */\n  muted: PropTypes.bool,\n  /** Specifies height of skeleton in loading state. */\n  skeletonHeight: PropTypes.number,\n  /** Specifies width of skeleton in loading state. */\n  skeletonWidth: PropTypes.number,\n};\n\nCardSection.defaultProps = {\n  children: null,\n  className: undefined,\n  title: undefined,\n  actions: undefined,\n  muted: false,\n  skeletonHeight: SKELETON_HEIGHT_VALUE,\n  skeletonWidth: undefined,\n};\n\nexport default CardSection;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,WAAW,MAAM,eAAe;AAEvC,MAAMC,qBAAqB,GAAG,GAAG;AAEjC,MAAMC,WAAW,gBAAGP,KAAK,CAACQ,UAAU,CAAC,CAAAC,IAAA,EAQlCC,GAAG,KAAK;EAAA,IAR2B;IACpCC,SAAS;IACTC,QAAQ;IACRC,KAAK;IACLC,OAAO;IACPC,KAAK;IACLC,cAAc;IACdC;EACF,CAAC,GAAAR,IAAA;EACC,MAAM;IAAES;EAAU,CAAC,GAAGjB,UAAU,CAACI,WAAW,CAAC;EAE7C,IAAIa,SAAS,EAAE;IACb,oBACElB,KAAA,CAAAmB,aAAA;MAAKR,SAAS,EAAER,UAAU,CAAC,mBAAmB,EAAEQ,SAAS,EAAE;QAAE,UAAU,EAAEI;MAAM,CAAC;IAAE,gBAChFf,KAAA,CAAAmB,aAAA,CAACf,QAAQ;MACPgB,kBAAkB,EAAC,0BAA0B;MAC7CC,MAAM,EAAEL,cAAe;MACvBM,KAAK,EAAEL;IAAc,CACtB,CACE,CAAC;EAEV;EAEA,oBACEjB,KAAA,CAAAmB,aAAA;IACER,SAAS,EAAER,UAAU,CAAC,mBAAmB,EAAEQ,SAAS,EAAE;MAAE,UAAU,EAAEI;IAAM,CAAC,CAAE;IAC7EL,GAAG,EAAEA;EAAI,GAERG,KAAK,iBAAIb,KAAA,CAAAmB,aAAA;IAAKR,SAAS,EAAC;EAAyB,GAAEE,KAAW,CAAC,EAC/DD,QAAQ,EACRE,OAAO,iBAAId,KAAA,CAAAmB,aAAA;IAAKR,SAAS,EAAC;EAA2B,GAAEG,OAAa,CAClE,CAAC;AAEV,CAAC,CAAC;AAEFP,WAAW,CAACgB,SAAS,GAAG;EACtB;EACAZ,SAAS,EAAET,SAAS,CAACsB,MAAM;EAC3B;EACAZ,QAAQ,EAAEV,SAAS,CAACuB,IAAI;EACxB;EACAZ,KAAK,EAAEX,SAAS,CAACuB,IAAI;EACrB;EACAX,OAAO,EAAEZ,SAAS,CAACuB,IAAI;EACvB;EACAV,KAAK,EAAEb,SAAS,CAACwB,IAAI;EACrB;EACAV,cAAc,EAAEd,SAAS,CAACyB,MAAM;EAChC;EACAV,aAAa,EAAEf,SAAS,CAACyB;AAC3B,CAAC;AAEDpB,WAAW,CAACqB,YAAY,GAAG;EACzBhB,QAAQ,EAAE,IAAI;EACdD,SAAS,EAAEkB,SAAS;EACpBhB,KAAK,EAAEgB,SAAS;EAChBf,OAAO,EAAEe,SAAS;EAClBd,KAAK,EAAE,KAAK;EACZC,cAAc,EAAEV,qBAAqB;EACrCW,aAAa,EAAEY;AACjB,CAAC;AAED,eAAetB,WAAW","ignoreList":[]}