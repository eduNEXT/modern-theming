{"version":3,"file":"CardDeck.js","names":["React","Children","useMemo","classNames","PropTypes","Row","Col","useOverflowScrollItems","CardDeck","forwardRef","_ref","ref","className","children","columnSizes","hasInteractiveChildren","canScrollHorizontal","hasOverflowScrollItems","hasEqualColumnHeights","cards","map","card","createElement","overflowCardDeckItems","cardDeckChildren","tabIndex","propTypes","string","node","isRequired","shape","xs","number","sm","md","lg","xl","bool","defaultProps","undefined"],"sources":["../../src/Card/CardDeck.jsx"],"sourcesContent":["import React, { Children, useMemo } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { useOverflowScrollItems } from '../OverflowScroll';\n\nconst CardDeck = React.forwardRef(({\n  className,\n  children,\n  columnSizes,\n  hasInteractiveChildren,\n  canScrollHorizontal,\n  hasOverflowScrollItems,\n  hasEqualColumnHeights,\n}, ref) => {\n  const cards = useMemo(\n    () => Children.map(children, (card) => (\n      <Col\n        {...columnSizes}\n        className={classNames(\n          'pgn__card-deck__card-item',\n          {\n            'pgn__card__disable-equal-column-heights': !hasEqualColumnHeights,\n          },\n        )}\n      >\n        {card}\n      </Col>\n    )),\n    [children, columnSizes, hasEqualColumnHeights],\n  );\n  const overflowCardDeckItems = useOverflowScrollItems(cards);\n\n  const cardDeckChildren = useMemo(() => {\n    if (hasOverflowScrollItems) {\n      return overflowCardDeckItems;\n    }\n    return cards;\n  }, [hasOverflowScrollItems, overflowCardDeckItems, cards]);\n\n  return (\n    <div\n      className={classNames(\n        'pgn__card-deck',\n        {\n          'pgn__card-deck-has-horizontal-scroll': canScrollHorizontal,\n        },\n        className,\n      )}\n    >\n      <Row\n        className=\"pgn__card-deck-row\"\n        tabIndex={hasInteractiveChildren ? -1 : 0}\n        ref={ref}\n      >\n        {cardDeckChildren}\n      </Row>\n    </div>\n  );\n});\n\nCardDeck.propTypes = {\n  /** The class name for the CardDeck component */\n  className: PropTypes.string,\n  /** The Card components to organize */\n  children: PropTypes.node.isRequired,\n  /**\n   * An object containing the desired column size at each breakpoint, following a similar\n   * props API as ``react-bootstrap/Col``\n   */\n  columnSizes: PropTypes.shape({\n    xs: PropTypes.number,\n    sm: PropTypes.number,\n    md: PropTypes.number,\n    lg: PropTypes.number,\n    xl: PropTypes.number,\n  }),\n  /** Whether the child `Card` components are interactive/focusable. If not, a `tabindex=\"0\"` is\n   * added to be a11y-compliant */\n  hasInteractiveChildren: PropTypes.bool,\n  /** Whether the `CardDeck` supports horizontal scrolling when there are overflow children */\n  canScrollHorizontal: PropTypes.bool,\n  /** Whether the children of CardDeck should be processed by `useOverflowScrollItems` to give\n   * each child a known/stable CSS classname */\n  hasOverflowScrollItems: PropTypes.bool,\n  /** Whether to disable the default equal height cards */\n  hasEqualColumnHeights: PropTypes.bool,\n};\n\nCardDeck.defaultProps = {\n  className: undefined,\n  columnSizes: {\n    sm: 12,\n    lg: 6,\n    xl: 4,\n  },\n  hasInteractiveChildren: false,\n  canScrollHorizontal: true,\n  hasOverflowScrollItems: false,\n  hasEqualColumnHeights: true,\n};\n\nexport default CardDeck;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AAChD,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,SAASC,sBAAsB,QAAQ,mBAAmB;AAE1D,MAAMC,QAAQ,gBAAGR,KAAK,CAACS,UAAU,CAAC,CAAAC,IAAA,EAQ/BC,GAAG,KAAK;EAAA,IARwB;IACjCC,SAAS;IACTC,QAAQ;IACRC,WAAW;IACXC,sBAAsB;IACtBC,mBAAmB;IACnBC,sBAAsB;IACtBC;EACF,CAAC,GAAAR,IAAA;EACC,MAAMS,KAAK,GAAGjB,OAAO,CACnB,MAAMD,QAAQ,CAACmB,GAAG,CAACP,QAAQ,EAAGQ,IAAI,iBAChCrB,KAAA,CAAAsB,aAAA,CAAChB,GAAG;IAAA,GACEQ,WAAW;IACfF,SAAS,EAAET,UAAU,CACnB,2BAA2B,EAC3B;MACE,yCAAyC,EAAE,CAACe;IAC9C,CACF;EAAE,GAEDG,IACE,CACN,CAAC,EACF,CAACR,QAAQ,EAAEC,WAAW,EAAEI,qBAAqB,CAC/C,CAAC;EACD,MAAMK,qBAAqB,GAAGhB,sBAAsB,CAACY,KAAK,CAAC;EAE3D,MAAMK,gBAAgB,GAAGtB,OAAO,CAAC,MAAM;IACrC,IAAIe,sBAAsB,EAAE;MAC1B,OAAOM,qBAAqB;IAC9B;IACA,OAAOJ,KAAK;EACd,CAAC,EAAE,CAACF,sBAAsB,EAAEM,qBAAqB,EAAEJ,KAAK,CAAC,CAAC;EAE1D,oBACEnB,KAAA,CAAAsB,aAAA;IACEV,SAAS,EAAET,UAAU,CACnB,gBAAgB,EAChB;MACE,sCAAsC,EAAEa;IAC1C,CAAC,EACDJ,SACF;EAAE,gBAEFZ,KAAA,CAAAsB,aAAA,CAACjB,GAAG;IACFO,SAAS,EAAC,oBAAoB;IAC9Ba,QAAQ,EAAEV,sBAAsB,GAAG,CAAC,CAAC,GAAG,CAAE;IAC1CJ,GAAG,EAAEA;EAAI,GAERa,gBACE,CACF,CAAC;AAEV,CAAC,CAAC;AAEFhB,QAAQ,CAACkB,SAAS,GAAG;EACnB;EACAd,SAAS,EAAER,SAAS,CAACuB,MAAM;EAC3B;EACAd,QAAQ,EAAET,SAAS,CAACwB,IAAI,CAACC,UAAU;EACnC;AACF;AACA;AACA;EACEf,WAAW,EAAEV,SAAS,CAAC0B,KAAK,CAAC;IAC3BC,EAAE,EAAE3B,SAAS,CAAC4B,MAAM;IACpBC,EAAE,EAAE7B,SAAS,CAAC4B,MAAM;IACpBE,EAAE,EAAE9B,SAAS,CAAC4B,MAAM;IACpBG,EAAE,EAAE/B,SAAS,CAAC4B,MAAM;IACpBI,EAAE,EAAEhC,SAAS,CAAC4B;EAChB,CAAC,CAAC;EACF;AACF;EACEjB,sBAAsB,EAAEX,SAAS,CAACiC,IAAI;EACtC;EACArB,mBAAmB,EAAEZ,SAAS,CAACiC,IAAI;EACnC;AACF;EACEpB,sBAAsB,EAAEb,SAAS,CAACiC,IAAI;EACtC;EACAnB,qBAAqB,EAAEd,SAAS,CAACiC;AACnC,CAAC;AAED7B,QAAQ,CAAC8B,YAAY,GAAG;EACtB1B,SAAS,EAAE2B,SAAS;EACpBzB,WAAW,EAAE;IACXmB,EAAE,EAAE,EAAE;IACNE,EAAE,EAAE,CAAC;IACLC,EAAE,EAAE;EACN,CAAC;EACDrB,sBAAsB,EAAE,KAAK;EAC7BC,mBAAmB,EAAE,IAAI;EACzBC,sBAAsB,EAAE,KAAK;EAC7BC,qBAAqB,EAAE;AACzB,CAAC;AAED,eAAeV,QAAQ","ignoreList":[]}