{"version":3,"file":"UploadProgress.js","names":["React","PropTypes","FormattedMessage","Button","ProgressBar","Spinner","UploadProgress","_ref","percent","variant","name","onCancel","createElement","animation","screenReaderText","className","id","defaultMessage","description","values","filename","now","label","onClick","propTypes","oneOf","isRequired","number","string","func"],"sources":["../../src/Dropzone/UploadProgress.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Button from '../Button';\nimport ProgressBar from '../ProgressBar';\nimport Spinner from '../Spinner';\n\nfunction UploadProgress({\n  percent, variant, name, onCancel,\n}) {\n  if (variant === 'spinner') {\n    return (\n      <Spinner\n        animation=\"border\"\n        aria-live=\"polite\"\n        screenReaderText={`Uploading ${name}, ${percent}% done.`}\n        data-testid=\"upload-spinner\"\n      />\n    );\n  }\n\n  return (\n    <div className=\"w-50\">\n      <p className=\"text-muted\">\n        <FormattedMessage\n          id=\"pgn.Dropzone.UploadProgress.uploadLabel\"\n          defaultMessage=\"Uploading {filename}.\"\n          description=\"A text that is shown near a progress bar during file upload in Dropzone component.\"\n          values={{ filename: name }}\n        />\n      </p>\n      <div className=\"d-flex justify-content-between align-items-center w-100\">\n        <ProgressBar\n          now={percent}\n          label={`${percent}%`}\n          variant=\"success\"\n          className=\"flex-grow-1\"\n          data-testid=\"upload-progress-bar\"\n        />\n        <Button variant=\"tertiary\" className=\"ml-3\" onClick={onCancel}>\n          <FormattedMessage\n            id=\"pgn.Dropzone.UploadProgress.cancelLabel\"\n            defaultMessage=\"Cancel\"\n            description=\"Label of a cancel button that is shown during file upload in Dropzone component.\"\n          />\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nUploadProgress.propTypes = {\n  variant: PropTypes.oneOf(['spinner', 'bar']).isRequired,\n  percent: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  onCancel: PropTypes.func.isRequired,\n};\n\nexport default UploadProgress;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,gBAAgB,QAAQ,YAAY;AAC7C,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,WAAW,MAAM,gBAAgB;AACxC,OAAOC,OAAO,MAAM,YAAY;AAEhC,SAASC,cAAcA,CAAAC,IAAA,EAEpB;EAAA,IAFqB;IACtBC,OAAO;IAAEC,OAAO;IAAEC,IAAI;IAAEC;EAC1B,CAAC,GAAAJ,IAAA;EACC,IAAIE,OAAO,KAAK,SAAS,EAAE;IACzB,oBACET,KAAA,CAAAY,aAAA,CAACP,OAAO;MACNQ,SAAS,EAAC,QAAQ;MAClB,aAAU,QAAQ;MAClBC,gBAAgB,EAAE,aAAaJ,IAAI,KAAKF,OAAO,SAAU;MACzD,eAAY;IAAgB,CAC7B,CAAC;EAEN;EAEA,oBACER,KAAA,CAAAY,aAAA;IAAKG,SAAS,EAAC;EAAM,gBACnBf,KAAA,CAAAY,aAAA;IAAGG,SAAS,EAAC;EAAY,gBACvBf,KAAA,CAAAY,aAAA,CAACV,gBAAgB;IACfc,EAAE,EAAC,yCAAyC;IAC5CC,cAAc,EAAC,uBAAuB;IACtCC,WAAW,EAAC,oFAAoF;IAChGC,MAAM,EAAE;MAAEC,QAAQ,EAAEV;IAAK;EAAE,CAC5B,CACA,CAAC,eACJV,KAAA,CAAAY,aAAA;IAAKG,SAAS,EAAC;EAAyD,gBACtEf,KAAA,CAAAY,aAAA,CAACR,WAAW;IACViB,GAAG,EAAEb,OAAQ;IACbc,KAAK,EAAE,GAAGd,OAAO,GAAI;IACrBC,OAAO,EAAC,SAAS;IACjBM,SAAS,EAAC,aAAa;IACvB,eAAY;EAAqB,CAClC,CAAC,eACFf,KAAA,CAAAY,aAAA,CAACT,MAAM;IAACM,OAAO,EAAC,UAAU;IAACM,SAAS,EAAC,MAAM;IAACQ,OAAO,EAAEZ;EAAS,gBAC5DX,KAAA,CAAAY,aAAA,CAACV,gBAAgB;IACfc,EAAE,EAAC,yCAAyC;IAC5CC,cAAc,EAAC,QAAQ;IACvBC,WAAW,EAAC;EAAkF,CAC/F,CACK,CACL,CACF,CAAC;AAEV;AAEAZ,cAAc,CAACkB,SAAS,GAAG;EACzBf,OAAO,EAAER,SAAS,CAACwB,KAAK,CAAC,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,CAACC,UAAU;EACvDlB,OAAO,EAAEP,SAAS,CAAC0B,MAAM,CAACD,UAAU;EACpChB,IAAI,EAAET,SAAS,CAAC2B,MAAM,CAACF,UAAU;EACjCf,QAAQ,EAAEV,SAAS,CAAC4B,IAAI,CAACH;AAC3B,CAAC;AAED,eAAepB,cAAc","ignoreList":[]}