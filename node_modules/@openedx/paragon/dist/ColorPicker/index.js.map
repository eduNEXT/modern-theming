{"version":3,"file":"index.js","names":["React","PropTypes","classNames","HexColorPicker","Button","Form","ModalPopup","OverlayTrigger","Tooltip","useToggle","ColorPicker","_ref","color","setColor","className","size","isOpen","open","close","target","setTarget","useState","colorIsValid","colorToValidate","hexRegex","test","formatHexColorString","colorString","startsWith","slice","hexValid","setHexValid","hexColorString","setHexColorString","colorToDisplay","setColorToDisplay","formattedColor","setValidatedColor","newColor","createElement","Fragment","placement","overlay","id","ref","style","background","onClick","positionRef","onClose","textAlign","onChange","Group","Label","Control","isInvalid","value","e","spellCheck","Feedback","type","defaultProps","undefined","propTypes","string","func","isRequired","oneOf"],"sources":["../../src/ColorPicker/index.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { HexColorPicker } from 'react-colorful';\n\nimport Button from '../Button';\nimport Form from '../Form';\nimport ModalPopup from '../Modal/ModalPopup';\nimport { OverlayTrigger } from '../Overlay';\nimport Tooltip from '../Tooltip';\nimport useToggle from '../hooks/useToggleHook';\n\nfunction ColorPicker({\n  color, setColor, className, size,\n}) {\n  const [isOpen, open, close] = useToggle(false);\n  const [target, setTarget] = React.useState(null);\n\n  const colorIsValid = (colorToValidate) => {\n    const hexRegex = /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n    return hexRegex.test(colorToValidate);\n  };\n\n  const formatHexColorString = (colorString) => {\n    if (!colorString.startsWith('#')) {\n      return `#${colorString}`.slice(0, 7);\n    }\n\n    return colorString.slice(0, 7);\n  };\n\n  const [hexValid, setHexValid] = React.useState(() => (color === '' || colorIsValid(formatHexColorString(color))));\n\n  const [hexColorString, setHexColorString] = React.useState(() => {\n    if (color === '') {\n      return '';\n    }\n\n    return formatHexColorString(color);\n  });\n  const [colorToDisplay, setColorToDisplay] = React.useState(() => {\n    const formattedColor = formatHexColorString(color);\n    if (colorIsValid(formattedColor)) {\n      return formattedColor;\n    }\n\n    return '#fff';\n  });\n\n  const setValidatedColor = (newColor) => {\n    if (newColor === '') {\n      setHexValid(true);\n      setColor('');\n      setHexColorString('');\n      setColorToDisplay('#fff');\n      return;\n    }\n\n    const formattedColor = formatHexColorString(newColor);\n\n    if (colorIsValid(formattedColor)) {\n      setHexValid(true);\n      setColor(formattedColor);\n      setHexColorString(formattedColor);\n      setColorToDisplay(formattedColor);\n      return;\n    }\n\n    setHexValid(false);\n    setHexColorString(formattedColor);\n\n    // ensure the picker value stays in sync with the textbox\n    setColor(formattedColor);\n  };\n\n  return (\n    <>\n      <span className=\"d-flex\">\n        <OverlayTrigger\n          placement=\"top\"\n          overlay={<Tooltip id=\"color-picker-tooltip\">Color picker</Tooltip>}\n        >\n          <Button\n            ref={setTarget}\n            className={classNames(\n              className,\n              'pgn__color-picker',\n              `pgn__color-picker-${size}`,\n            )}\n            style={{\n              ...(color && hexValid ? { background: `${color}` } : {}),\n            }}\n            onClick={open}\n          />\n        </OverlayTrigger>\n      </span>\n      <ModalPopup\n        positionRef={target}\n        isOpen={isOpen}\n        style={{ background: 'black' }}\n        onClose={close}\n      >\n        <div\n          className=\"pgn__color-modal rounded shadow\"\n          style={{ textAlign: 'start' }}\n        >\n          <HexColorPicker color={colorToDisplay} onChange={setValidatedColor} />\n          <Form.Group className=\"pgn__hex-form\" size=\"sm\">\n            <div>\n              <Form.Label className=\"pgn__hex-label\">Hex</Form.Label>\n              <Form.Control\n                className=\"pgn__hex-field\"\n                isInvalid={!hexValid}\n                value={hexColorString}\n                onChange={(e) => setValidatedColor(e.target.value)}\n                data-testid=\"hex-input\"\n                spellCheck=\"false\"\n              />\n            </div>\n            {!hexValid && (\n              <Form.Control.Feedback\n                className=\"pgn__color-error\"\n                type=\"invalid\"\n              >\n                Colors must be in hexadecimal format.\n              </Form.Control.Feedback>\n            )}\n          </Form.Group>\n        </div>\n      </ModalPopup>\n    </>\n  );\n}\n\nColorPicker.defaultProps = {\n  color: '',\n  className: undefined,\n  size: 'md',\n};\n\nColorPicker.propTypes = {\n  /** A default hex code to preset the picker to display. */\n  color: PropTypes.string,\n  /** Passing setState function allows parent to alter the color. */\n  setColor: PropTypes.func.isRequired,\n  /** A class name to append to the base element. */\n  className: PropTypes.string,\n  /** Size of the color picker */\n  size: PropTypes.oneOf(['sm', 'md']),\n};\n\nexport default ColorPicker;\n"],"mappings":"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","ignoreList":[]}