{"version":3,"file":"ModalContext.js","names":["React","useMemo","ModalContext","createContext","onClose","isOpen","isBlocking","ModalContextProvider","_ref","children","modalContextValue","createElement","Provider","value"],"sources":["../../src/Modal/ModalContext.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\n\ninterface ContextData {\n  onClose: () => void;\n  isOpen: boolean;\n  isBlocking: boolean;\n}\n\nconst ModalContext = React.createContext<ContextData>({\n  onClose: () => {},\n  isOpen: false,\n  isBlocking: false,\n});\n\nfunction ModalContextProvider({\n  onClose,\n  isOpen,\n  isBlocking = false,\n  children = null,\n}: {\n  onClose: () => void;\n  isOpen: boolean;\n  isBlocking?: boolean;\n  children?: React.ReactNode;\n}) {\n  const modalContextValue = useMemo<ContextData>(\n    () => ({ onClose, isOpen, isBlocking }),\n    [onClose, isOpen, isBlocking],\n  );\n\n  return (\n    <ModalContext.Provider value={modalContextValue}>\n      {children}\n    </ModalContext.Provider>\n  );\n}\n\nexport { ModalContextProvider };\nexport default ModalContext;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AAQtC,MAAMC,YAAY,gBAAGF,KAAK,CAACG,aAAa,CAAc;EACpDC,OAAO,EAAEA,CAAA,KAAM,CAAC,CAAC;EACjBC,MAAM,EAAE,KAAK;EACbC,UAAU,EAAE;AACd,CAAC,CAAC;AAEF,SAASC,oBAAoBA,CAAAC,IAAA,EAU1B;EAAA,IAV2B;IAC5BJ,OAAO;IACPC,MAAM;IACNC,UAAU,GAAG,KAAK;IAClBG,QAAQ,GAAG;EAMb,CAAC,GAAAD,IAAA;EACC,MAAME,iBAAiB,GAAGT,OAAO,CAC/B,OAAO;IAAEG,OAAO;IAAEC,MAAM;IAAEC;EAAW,CAAC,CAAC,EACvC,CAACF,OAAO,EAAEC,MAAM,EAAEC,UAAU,CAC9B,CAAC;EAED,oBACEN,KAAA,CAAAW,aAAA,CAACT,YAAY,CAACU,QAAQ;IAACC,KAAK,EAAEH;EAAkB,GAC7CD,QACoB,CAAC;AAE5B;AAEA,SAASF,oBAAoB;AAC7B,eAAeL,YAAY","ignoreList":[]}