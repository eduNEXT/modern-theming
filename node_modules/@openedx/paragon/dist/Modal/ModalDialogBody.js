import React from 'react';
import PropTypes from 'prop-types';
import classNames from 'classnames';
import useIsVisible from '../hooks/useIsVisibleHook';
function ModalDialogBody(_ref) {
  let {
    as,
    children,
    ...props
  } = _ref;
  const [isScrolledToTop, topSentinelRef] = useIsVisible();
  const [isScrolledToBottom, bottomSentinelRef] = useIsVisible();
  const className = classNames('pgn__modal-body', props.className, {
    'pgn__modal-body-scroll-top': isScrolledToTop,
    'pgn__modal-body-scroll-bottom': isScrolledToBottom
  });
  return /*#__PURE__*/React.createElement(as, {
    ...props,
    className
  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    ref: topSentinelRef
  }), /*#__PURE__*/React.createElement("div", {
    className: "pgn__modal-body-content"
  }, children), /*#__PURE__*/React.createElement("div", {
    ref: bottomSentinelRef
  })));
}
ModalDialogBody.propTypes = {
  /** Specifies the base element */
  as: PropTypes.elementType,
  /** Specifies the contents of the header */
  children: PropTypes.node.isRequired,
  /** Specifies class name to append to the base element */
  className: PropTypes.string
};
ModalDialogBody.defaultProps = {
  as: 'div',
  className: undefined
};
export default ModalDialogBody;
//# sourceMappingURL=ModalDialogBody.js.map