{"version":3,"file":"index.js","names":["React","useCallback","useEffect","ProgressBarBase","PropTypes","classNames","Annotation","getOffsetStyles","placeInfoAtZero","ANNOTATION_CLASS","HINT_SWAP_PERCENT","PROGRESS_DEFAULT_VARIANT","THRESHOLD_DEFAULT_VARIANT","VARIANTS","ProgressBar","props","createElement","ProgressBarAnnotated","_ref","now","label","variant","threshold","thresholdLabel","thresholdVariant","progressHint","thresholdHint","progressInfoRef","useRef","thresholdInfoRef","thresholdPercent","isProgressHintAfter","isThresholdHintAfter","progressColor","includes","thresholdColor","direction","window","getComputedStyle","document","body","getPropertyValue","positionAnnotations","observer","ResizeObserver","progressInfoEl","current","observe","unobserve","getHint","text","className","style","ref","srOnly","arrowPlacement","propTypes","number","node","oneOf","string","defaultProps","undefined","Annotated"],"sources":["../../src/ProgressBar/index.jsx"],"sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport ProgressBarBase from 'react-bootstrap/ProgressBar';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Annotation from '../Annotation';\nimport { getOffsetStyles, placeInfoAtZero } from './utils';\n\nexport const ANNOTATION_CLASS = 'pgn__annotation';\nconst HINT_SWAP_PERCENT = 50;\nconst PROGRESS_DEFAULT_VARIANT = 'warning';\nconst THRESHOLD_DEFAULT_VARIANT = 'dark';\nconst VARIANTS = [\n  'dark',\n  'warning',\n  'success',\n  'error',\n];\n\nfunction ProgressBar(props) {\n  return <ProgressBarBase {...props} />;\n}\n\nfunction ProgressBarAnnotated({\n  now,\n  label,\n  variant,\n  threshold,\n  thresholdLabel,\n  thresholdVariant,\n  progressHint,\n  thresholdHint,\n  ...props\n}) {\n  const progressInfoRef = React.useRef();\n  const thresholdInfoRef = React.useRef();\n  const thresholdPercent = (threshold || 0) - (now || 0);\n  const isProgressHintAfter = now < HINT_SWAP_PERCENT;\n  const isThresholdHintAfter = threshold < HINT_SWAP_PERCENT;\n  const progressColor = VARIANTS.includes(variant) ? variant : PROGRESS_DEFAULT_VARIANT;\n  const thresholdColor = VARIANTS.includes(thresholdVariant) ? thresholdVariant : THRESHOLD_DEFAULT_VARIANT;\n  const direction = window.getComputedStyle(document.body).getPropertyValue('direction');\n\n  const positionAnnotations = useCallback(() => {\n    placeInfoAtZero(progressInfoRef, direction, isProgressHintAfter, ANNOTATION_CLASS);\n    placeInfoAtZero(thresholdInfoRef, direction, isThresholdHintAfter, ANNOTATION_CLASS);\n  }, [direction, isProgressHintAfter, isThresholdHintAfter]);\n\n  useEffect(() => {\n    positionAnnotations();\n    const observer = new ResizeObserver(() => {\n      positionAnnotations();\n    });\n    const progressInfoEl = progressInfoRef.current;\n    observer.observe(progressInfoEl);\n    return () => progressInfoEl && observer.unobserve(progressInfoEl);\n  }, [positionAnnotations]);\n\n  const getHint = (text) => (\n    <span className=\"pgn__progress-hint\" data-testid=\"progress-hint\">\n      {text}\n    </span>\n  );\n\n  return (\n    <div className=\"pgn__progress-annotated\">\n      {!!label && (\n        <div\n          className=\"pgn__progress-info\"\n          style={getOffsetStyles(now, direction)}\n          ref={progressInfoRef}\n        >\n          {!isProgressHintAfter && getHint(progressHint)}\n          <Annotation variant={progressColor}>\n            {label}\n          </Annotation>\n          {isProgressHintAfter && getHint(progressHint)}\n        </div>\n      )}\n      <ProgressBarBase>\n        <ProgressBarBase\n          {...props}\n          now={now}\n          className={classNames(\n            `pgn__progress-bar--${progressColor}`,\n            thresholdPercent > 0 ? 'pgn__progress-tick--white' : 'pgn__progress-tick--black',\n          )}\n          srOnly\n        />\n        {!!threshold && (\n          <ProgressBarBase\n            now={thresholdPercent}\n            className={`pgn__progress-bar--${thresholdColor}`}\n            srOnly\n          />\n        )}\n      </ProgressBarBase>\n      {(!!threshold && !!thresholdLabel) && (\n        <div\n          className=\"pgn__progress-info\"\n          style={getOffsetStyles(threshold, direction)}\n          ref={thresholdInfoRef}\n        >\n          {!isThresholdHintAfter && getHint(thresholdHint)}\n          <Annotation\n            arrowPlacement=\"top\"\n            variant={thresholdColor}\n          >\n            {thresholdLabel}\n          </Annotation>\n          {isThresholdHintAfter && getHint(thresholdHint)}\n        </div>\n      )}\n    </div>\n  );\n}\n\nProgressBarAnnotated.propTypes = {\n  /** Current value of progress. */\n  now: PropTypes.number,\n  /** Show label that represents visual percentage. */\n  label: PropTypes.node,\n  /** The `ProgressBar` style variant to use. */\n  variant: PropTypes.oneOf(VARIANTS),\n  /** Specifies an additional `className` to add to the base element. */\n  className: PropTypes.string,\n  /** Threshold current value. */\n  threshold: PropTypes.number,\n  /** Specifies label for `threshold`. */\n  thresholdLabel: PropTypes.node,\n  /** Variant for threshold value. */\n  thresholdVariant: PropTypes.oneOf(VARIANTS),\n  /** Text near the progress annotation. */\n  progressHint: PropTypes.node,\n  /** Text near the threshold annotation. */\n  thresholdHint: PropTypes.node,\n};\n\nProgressBarAnnotated.defaultProps = {\n  now: undefined,\n  label: undefined,\n  variant: PROGRESS_DEFAULT_VARIANT,\n  className: undefined,\n  threshold: undefined,\n  thresholdLabel: undefined,\n  thresholdVariant: THRESHOLD_DEFAULT_VARIANT,\n  progressHint: undefined,\n  thresholdHint: undefined,\n};\n\nProgressBar.Annotated = ProgressBarAnnotated;\nexport default ProgressBar;\n"],"mappings":"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","ignoreList":[]}