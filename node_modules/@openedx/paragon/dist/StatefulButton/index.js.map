{"version":3,"file":"index.js","names":["React","PropTypes","classNames","Cancel","CheckCircleOutline","SpinnerSimple","Button","Icon","StatefulButton","_ref","className","state","labels","icons","disabledStates","onClick","attributes","isDisabled","indexOf","icon","undefined","default","label","createElement","disabled","e","preventDefault","propTypes","string","objectOf","node","isRequired","arrayOf","func","defaultProps","pending","src","complete","error"],"sources":["../../src/StatefulButton/index.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Cancel, CheckCircleOutline, SpinnerSimple } from '../../icons';\nimport Button from '../Button';\nimport Icon from '../Icon';\n\nfunction StatefulButton({\n  className,\n  state,\n  labels,\n  icons,\n  disabledStates,\n  onClick,\n  ...attributes\n}) {\n  const isDisabled = disabledStates.indexOf(state) !== -1;\n  const icon = icons[state] !== undefined ? icons[state] : icons.default;\n  const label = labels[state] !== undefined ? labels[state] : labels.default;\n\n  return (\n    <Button\n      aria-live=\"assertive\"\n      aria-disabled={isDisabled}\n      className={classNames(\n        'pgn__stateful-btn',\n        `pgn__stateful-btn-state-${state}`,\n        className,\n        { disabled: isDisabled },\n      )}\n      onClick={(e) => {\n        // Swallow clicks if the button is disabled.\n        // We do this instead of disabling the button to prevent\n        // it from losing focus (disabled elements cannot have focus).\n        if (isDisabled) {\n          e.preventDefault();\n          return;\n        }\n\n        if (onClick) {\n          onClick(e);\n        }\n      }}\n      {...attributes}\n    >\n      <span className=\"d-flex align-items-center justify-content-center\">\n        {icon && <span className={classNames({ 'pgn__stateful-btn-icon': !!label })}>{icon}</span>}\n        {label ? <span>{label}</span> : <span className=\"sr-only\">{state}</span>}\n      </span>\n    </Button>\n  );\n}\n\nStatefulButton.propTypes = {\n  className: PropTypes.string,\n  /**\n   * Each state has:\n   * - A label (required)\n   * - An icon\n   * - an option to be disabled\n   *\n   * Control the state with the `state` prop. Example usage:\n   *\n   * ```jsx\n   * <StatefulButton\n   *   state=\"pending\"\n   *   labels={{\n   *     default: 'Download',\n   *     pending: 'Downloading',\n   *     complete: 'Downloaded',\n   *   }}\n   *   icons={{\n   *     default: <Icon className=\"fa fa-download\" />,\n   *     pending: <Icon className=\"fa fa-spinner fa-spin\" />,\n   *     complete: <Icon className=\"fa fa-check\" />,\n   *   }}\n   *   disabledStates=['pending']\n   *   className='btn-primary mr-2'\n   * />\n   * ```\n   */\n  state: PropTypes.string,\n  /** Required. Each state has a `label`. */\n  labels: PropTypes.objectOf(PropTypes.node).isRequired,\n  /** Required. Each state has an `icon`. */\n  icons: PropTypes.objectOf(PropTypes.node),\n  /** Required. Each state has a `disabledState` */\n  disabledStates: PropTypes.arrayOf(PropTypes.string),\n  /** Specifies the callback function when the button is clicked */\n  onClick: PropTypes.func,\n};\n\nStatefulButton.defaultProps = {\n  className: undefined,\n  state: 'default',\n  icons: {\n    default: undefined,\n    pending: <Icon src={SpinnerSimple} className={classNames('icon-spin')} />,\n    complete: <Icon src={CheckCircleOutline} />,\n    error: <Icon src={Cancel} />,\n  },\n  disabledStates: ['pending', 'complete'],\n  onClick: undefined,\n};\n\nexport default StatefulButton;\n"],"mappings":"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","ignoreList":[]}