{"version":3,"file":"PaginationContext.js","names":["React","createContext","useEffect","useRef","useState","PropTypes","PAGINATION_VARIANTS","getPaginationRange","PaginationContext","PaginationContextProvider","_ref","children","onPageSelect","invertColors","maxPagesDisplayed","buttonLabels","icons","variant","pageCount","currentPage","controlledCurrentPage","initialPage","setCurrentPage","pageButtonSelected","setPageButtonSelected","previousButtonRef","nextButtonRef","pageButtonRef","currentPageRef","focus","isUncontrolled","undefined","isPageButtonActive","page","isOnFirstPage","isOnLastPage","isDefaultVariant","default","getPageButtonRefHandler","pageNum","element","current","handlePageSelect","handlePreviousButtonClick","prevState","handleNextButtonClick","getAriaLabelForPreviousButton","ariaLabel","previous","getAriaLabelForNextButton","next","getAriaLabelForPageButton","getAriaLabelForPageOfCountButton","pageOfCount","getScreenReaderText","getPageOfText","getPageButtonVariant","buttonVariant","getNextButtonIcon","rightIcon","getPrevButtonIcon","leftIcon","displayPages","currentIndex","count","length","requireFirstAndLastPages","value","createElement","Provider","propTypes","node","isRequired","func","number","shape","string","oneOfType","oneOf","Object","values","bool","defaultProps"],"sources":["../../src/Pagination/PaginationContext.jsx"],"sourcesContent":["import React, {\n  createContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { PAGINATION_VARIANTS } from './constants';\nimport getPaginationRange from './getPaginationRange';\n\nconst PaginationContext = createContext({});\n\nfunction PaginationContextProvider({\n  children, onPageSelect, invertColors, maxPagesDisplayed,\n  buttonLabels, icons, variant,\n  pageCount, currentPage: controlledCurrentPage, initialPage,\n}) {\n  const [currentPage, setCurrentPage] = useState(controlledCurrentPage || initialPage);\n  const [pageButtonSelected, setPageButtonSelected] = useState(false);\n  const previousButtonRef = useRef(null);\n  const nextButtonRef = useRef(null);\n  const pageButtonRef = useRef([]);\n\n  useEffect(() => {\n    const currentPageRef = pageButtonRef[currentPage];\n\n    if (currentPageRef && pageButtonSelected) {\n      currentPageRef.focus();\n      setPageButtonSelected(false);\n    }\n  }, [currentPage, pageButtonSelected]);\n\n  const isUncontrolled = () => controlledCurrentPage === undefined;\n  const isPageButtonActive = (page) => page === currentPage;\n  const isOnFirstPage = () => (currentPage === 1 || pageCount === 0);\n  const isOnLastPage = () => currentPage === pageCount || pageCount === 0;\n  const isDefaultVariant = () => variant === PAGINATION_VARIANTS.default;\n\n  if (!isUncontrolled() && controlledCurrentPage !== currentPage) {\n    setCurrentPage(controlledCurrentPage);\n  }\n\n  const getPageButtonRefHandler = (pageNum) => (element) => { pageButtonRef.current[pageNum] = element; };\n\n  const handlePageSelect = (page) => {\n    if (page !== currentPage) {\n      if (isUncontrolled()) {\n        setCurrentPage(page);\n      }\n      setPageButtonSelected(true);\n      onPageSelect(page);\n    }\n  };\n\n  const handlePreviousButtonClick = () => {\n    onPageSelect(currentPage - 1);\n    if (currentPage === 2) {\n      nextButtonRef.current.focus();\n    }\n    if (isUncontrolled()) {\n      setCurrentPage((prevState) => prevState - 1);\n    }\n  };\n\n  const handleNextButtonClick = () => {\n    onPageSelect(currentPage + 1);\n    if (currentPage === pageCount - 1) {\n      previousButtonRef.current.focus();\n    }\n    if (isUncontrolled()) {\n      setCurrentPage((prevState) => prevState + 1);\n    }\n  };\n\n  const getAriaLabelForPreviousButton = () => {\n    let ariaLabel = `${buttonLabels.previous}`;\n\n    if (!isOnFirstPage()) {\n      ariaLabel += `, ${buttonLabels.page} ${currentPage - 1}`;\n    }\n\n    return ariaLabel;\n  };\n\n  const getAriaLabelForNextButton = () => {\n    let ariaLabel = `${buttonLabels.next}`;\n\n    if (!isOnLastPage()) {\n      ariaLabel += `, ${buttonLabels.page} ${currentPage + 1}`;\n    }\n\n    return ariaLabel;\n  };\n\n  const getAriaLabelForPageButton = (page) => {\n    let ariaLabel = `${buttonLabels.page} ${page}`;\n\n    if (isPageButtonActive(page)) {\n      ariaLabel += `, ${buttonLabels.currentPage}`;\n    }\n\n    return ariaLabel;\n  };\n\n  const getAriaLabelForPageOfCountButton = () => `${buttonLabels.page} ${currentPage}, ${buttonLabels.currentPage}, ${buttonLabels.pageOfCount} ${pageCount}`;\n\n  const getScreenReaderText = () => `${buttonLabels.page} ${currentPage}, ${buttonLabels.currentPage}, ${buttonLabels.pageOfCount} ${pageCount}`;\n  const getPageOfText = () => `${currentPage} ${buttonLabels.pageOfCount} ${pageCount}`;\n\n  const getPageButtonVariant = (page) => {\n    let buttonVariant = isPageButtonActive(page) ? 'primary' : 'tertiary';\n\n    if (invertColors) {\n      buttonVariant = `inverse-${buttonVariant}`;\n    }\n\n    return buttonVariant;\n  };\n\n  const getNextButtonIcon = () => icons.rightIcon;\n  const getPrevButtonIcon = () => icons.leftIcon;\n\n  const displayPages = getPaginationRange({\n    currentIndex: currentPage,\n    count: pageCount,\n    length: maxPagesDisplayed,\n    requireFirstAndLastPages: true,\n  });\n\n  const value = {\n    invertColors,\n    displayPages,\n    pageCount,\n    buttonLabels,\n    previousButtonRef,\n    nextButtonRef,\n    pageButtonRef,\n    getPrevButtonIcon,\n    getNextButtonIcon,\n    getAriaLabelForNextButton,\n    getAriaLabelForPageButton,\n    getAriaLabelForPreviousButton,\n    getAriaLabelForPageOfCountButton,\n    getPageButtonVariant,\n    handlePreviousButtonClick,\n    handleNextButtonClick,\n    handlePageSelect,\n    isOnFirstPage,\n    isOnLastPage,\n    isPageButtonActive,\n    isDefaultVariant,\n    getScreenReaderText,\n    getPageOfText,\n    getPageButtonRefHandler,\n  };\n\n  return (\n    <PaginationContext.Provider value={value}>\n      {children}\n    </PaginationContext.Provider>\n  );\n}\n\nPaginationContextProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n  onPageSelect: PropTypes.func.isRequired,\n  pageCount: PropTypes.number.isRequired,\n  buttonLabels: PropTypes.shape({\n    previous: PropTypes.string,\n    next: PropTypes.string,\n    page: PropTypes.string,\n    currentPage: PropTypes.string,\n    pageOfCount: PropTypes.string,\n  }).isRequired,\n  currentPage: PropTypes.number,\n  maxPagesDisplayed: PropTypes.number.isRequired,\n  icons: PropTypes.shape({\n    leftIcon: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n    rightIcon: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n  }).isRequired,\n  variant: PropTypes.oneOf(Object.values(PAGINATION_VARIANTS)).isRequired,\n  invertColors: PropTypes.bool.isRequired,\n  initialPage: PropTypes.number.isRequired,\n};\n\nPaginationContextProvider.defaultProps = {\n  currentPage: undefined,\n};\n\nexport { PaginationContextProvider };\nexport default PaginationContext;\n"],"mappings":"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","ignoreList":[]}