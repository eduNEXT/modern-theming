{"version":3,"file":"CollapsibleAdvanced.js","names":["React","classNames","PropTypes","CollapsibleContext","createContext","CollapsibleAdvanced","Component","getDerivedStateFromProps","props","open","undefined","isOpen","constructor","state","defaultOpen","setState","onOpen","onToggle","close","onClose","toggle","render","children","className","unmountOnExit","createElement","Provider","value","propTypes","node","string","bool","func","defaultProps"],"sources":["../../src/Collapsible/CollapsibleAdvanced.jsx"],"sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport const CollapsibleContext = React.createContext();\n\nclass CollapsibleAdvanced extends React.Component {\n  static getDerivedStateFromProps(props) {\n    if (props.open !== undefined) {\n      return {\n        // Since this method fires on both props and state changes, local updates\n        // to the controlled value will be ignored, because the props version\n        // always overrides it. In this case, this is exactly what we want.\n        isOpen: props.open,\n      };\n    }\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: props.open !== undefined ? props.open : props.defaultOpen,\n    };\n  }\n\n  open = () => {\n    this.setState({ isOpen: true });\n\n    if (this.props.onOpen) {\n      this.props.onOpen();\n    }\n    if (this.props.onToggle) {\n      this.props.onToggle(true);\n    }\n  };\n\n  close = () => {\n    this.setState({ isOpen: false });\n\n    if (this.props.onClose) {\n      this.props.onClose();\n    }\n    if (this.props.onToggle) {\n      this.props.onToggle(false);\n    }\n  };\n\n  toggle = () => {\n    if (this.state.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  };\n\n  render() {\n    const {\n      children,\n      className,\n      unmountOnExit,\n      ...props\n    } = this.props;\n\n    // Unneeded for passthrough props\n    delete props.defaultOpen;\n    delete props.onToggle;\n    delete props.onOpen;\n    delete props.onClose;\n\n    return (\n      <div\n        {...props}\n        className={classNames('pgn_collapsible', className, {\n          'is-open': this.state.isOpen,\n        })}\n      >\n        <CollapsibleContext.Provider\n          value={{\n            isOpen: this.state.isOpen,\n            open: this.open,\n            close: this.close,\n            toggle: this.toggle,\n            unmountOnExit,\n          }}\n        >\n          {children}\n        </CollapsibleContext.Provider>\n      </div>\n    );\n  }\n}\n\nCollapsibleAdvanced.propTypes = {\n  /** Specifies contents of the component. */\n  children: PropTypes.node,\n  /** Specifies classname to append to the base element. */\n  className: PropTypes.string,\n  /** Specifies whether `Collapsible` should be initially open. */\n  defaultOpen: PropTypes.bool,\n  /** Specifies whether `Collapsible` is open. */\n  open: PropTypes.bool,\n  /** Callback fired when `Collapsible's` state is toggled. */\n  onToggle: PropTypes.func,\n  /** Callback fired when `Collapsible` opens. */\n  onOpen: PropTypes.func,\n  /** Callback fired when `Collapsible` closes. */\n  onClose: PropTypes.func,\n  /** Unmount the component (remove it from the DOM) when it is collapsed. */\n  unmountOnExit: PropTypes.bool,\n};\n\nCollapsibleAdvanced.defaultProps = {\n  children: undefined,\n  className: undefined,\n  defaultOpen: false,\n  open: undefined,\n  onToggle: undefined,\n  onOpen: undefined,\n  onClose: undefined,\n  unmountOnExit: true,\n};\n\nexport default CollapsibleAdvanced;\n"],"mappings":"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","ignoreList":[]}