{"version":3,"file":"DropdownFilters.js","names":["React","useContext","useMemo","DataTableContext","DropdownButton","useWindowSize","breakpoints","DropdownFilters","width","columns","numBreakoutFilters","breakoutFilters","otherFilters","availableFilters","filter","column","canFilter","small","minWidth","numberOfBreakoutFilters","boFilters","slice","dropdownFilters","createElement","className","length","map","key","Header","render","variant","id","title"],"sources":["../../src/DataTable/DropdownFilters.jsx"],"sourcesContent":["import React, { useContext, useMemo } from 'react';\nimport DataTableContext from './DataTableContext';\nimport { DropdownButton } from '../Dropdown';\nimport useWindowSize from '../hooks/useWindowSizeHook';\nimport breakpoints from '../utils/breakpoints';\n\n/** The first filter will be as an input, additional filters will be available in a dropdown.  */\nfunction DropdownFilters() {\n  const { width } = useWindowSize();\n  const { columns, numBreakoutFilters } = useContext(DataTableContext);\n\n  const [breakoutFilters, otherFilters] = useMemo(() => {\n    if (!columns) {\n      return [[], []];\n    }\n    const availableFilters = columns.filter((column) => column.canFilter);\n    if (width < breakpoints.small.minWidth) {\n      return [[], availableFilters];\n    }\n\n    const numberOfBreakoutFilters = numBreakoutFilters || 1;\n    const boFilters = availableFilters.slice(0, numberOfBreakoutFilters);\n    const dropdownFilters = availableFilters.slice(numberOfBreakoutFilters);\n\n    return [boFilters, dropdownFilters];\n  }, [columns, width, numBreakoutFilters]);\n\n  return (\n    <div className=\"pgn__data-table-filters\">\n      {breakoutFilters.length > 0 && breakoutFilters.map((column) => (\n        <div className=\"pgn__data-table-filters-breakout-filter\" key={column.Header}>\n          {column.render('Filter')}\n        </div>\n      ))}\n      {otherFilters.length > 0 && (\n        <DropdownButton variant=\"outline-primary\" id=\"table-filters-dropdown\" title=\"Filters\">\n          {otherFilters.map((column) => (\n            <div\n              key={column.Header}\n              className=\"pgn__data-table-filters-dropdown-item\"\n            >\n              {column.render('Filter')}\n            </div>\n          ))}\n        </DropdownButton>\n      )}\n    </div>\n  );\n}\n\nexport default DropdownFilters;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,OAAO,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,SAASC,cAAc,QAAQ,aAAa;AAC5C,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,WAAW,MAAM,sBAAsB;;AAE9C;AACA,SAASC,eAAeA,CAAA,EAAG;EACzB,MAAM;IAAEC;EAAM,CAAC,GAAGH,aAAa,CAAC,CAAC;EACjC,MAAM;IAAEI,OAAO;IAAEC;EAAmB,CAAC,GAAGT,UAAU,CAACE,gBAAgB,CAAC;EAEpE,MAAM,CAACQ,eAAe,EAAEC,YAAY,CAAC,GAAGV,OAAO,CAAC,MAAM;IACpD,IAAI,CAACO,OAAO,EAAE;MACZ,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC;IACjB;IACA,MAAMI,gBAAgB,GAAGJ,OAAO,CAACK,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACC,SAAS,CAAC;IACrE,IAAIR,KAAK,GAAGF,WAAW,CAACW,KAAK,CAACC,QAAQ,EAAE;MACtC,OAAO,CAAC,EAAE,EAAEL,gBAAgB,CAAC;IAC/B;IAEA,MAAMM,uBAAuB,GAAGT,kBAAkB,IAAI,CAAC;IACvD,MAAMU,SAAS,GAAGP,gBAAgB,CAACQ,KAAK,CAAC,CAAC,EAAEF,uBAAuB,CAAC;IACpE,MAAMG,eAAe,GAAGT,gBAAgB,CAACQ,KAAK,CAACF,uBAAuB,CAAC;IAEvE,OAAO,CAACC,SAAS,EAAEE,eAAe,CAAC;EACrC,CAAC,EAAE,CAACb,OAAO,EAAED,KAAK,EAAEE,kBAAkB,CAAC,CAAC;EAExC,oBACEV,KAAA,CAAAuB,aAAA;IAAKC,SAAS,EAAC;EAAyB,GACrCb,eAAe,CAACc,MAAM,GAAG,CAAC,IAAId,eAAe,CAACe,GAAG,CAAEX,MAAM,iBACxDf,KAAA,CAAAuB,aAAA;IAAKC,SAAS,EAAC,yCAAyC;IAACG,GAAG,EAAEZ,MAAM,CAACa;EAAO,GACzEb,MAAM,CAACc,MAAM,CAAC,QAAQ,CACpB,CACN,CAAC,EACDjB,YAAY,CAACa,MAAM,GAAG,CAAC,iBACtBzB,KAAA,CAAAuB,aAAA,CAACnB,cAAc;IAAC0B,OAAO,EAAC,iBAAiB;IAACC,EAAE,EAAC,wBAAwB;IAACC,KAAK,EAAC;EAAS,GAClFpB,YAAY,CAACc,GAAG,CAAEX,MAAM,iBACvBf,KAAA,CAAAuB,aAAA;IACEI,GAAG,EAAEZ,MAAM,CAACa,MAAO;IACnBJ,SAAS,EAAC;EAAuC,GAEhDT,MAAM,CAACc,MAAM,CAAC,QAAQ,CACpB,CACN,CACa,CAEf,CAAC;AAEV;AAEA,eAAetB,eAAe","ignoreList":[]}