{"version":3,"file":"TableRow.js","names":["React","useContext","PropTypes","classNames","TableCell","DataTableContext","TableRow","_ref","row","getRowProps","cells","id","isSelected","isExpanded","renderRowSubComponent","visibleColumns","createElement","Fragment","className","map","cell","key","column","Header","colSpan","length","propTypes","shape","func","isRequired","arrayOf","string","bool"],"sources":["../../src/DataTable/TableRow.jsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport TableCell from './TableCell';\nimport DataTableContext from './DataTableContext';\n\nfunction TableRow({ row }) {\n  const {\n    getRowProps, cells, id, isSelected, isExpanded,\n  } = row;\n  const { renderRowSubComponent, visibleColumns } = useContext(DataTableContext);\n\n  return (\n    <>\n      <tr {...getRowProps({\n        className: classNames({\n          'pgn__data-table-row': true,\n          'is-selected': isSelected,\n        }),\n      })}\n      >\n        {cells.map(cell => <TableCell {...cell} key={`${cell.column.Header}${id}`} />)}\n      </tr>\n      {isExpanded && renderRowSubComponent ? (\n        <tr>\n          <td colSpan={visibleColumns.length}>\n            {renderRowSubComponent({ row })}\n          </td>\n        </tr>\n      ) : null}\n    </>\n  );\n}\n\nTableRow.propTypes = {\n  /** Row data that is received from `react-table` API. */\n  row: PropTypes.shape({\n    /** props to include on the tr tag (must include id) */\n    getRowProps: PropTypes.func.isRequired,\n    /** cells in the row */\n    cells: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    /** row id */\n    id: PropTypes.string.isRequired,\n    /** indicates if row has been selected */\n    isSelected: PropTypes.bool,\n    /** Indicates if row has been expanded. */\n    isExpanded: PropTypes.bool,\n  }).isRequired,\n};\n\nexport default TableRow;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,UAAU,MAAM,YAAY;AAEnC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,gBAAgB,MAAM,oBAAoB;AAEjD,SAASC,QAAQA,CAAAC,IAAA,EAAU;EAAA,IAAT;IAAEC;EAAI,CAAC,GAAAD,IAAA;EACvB,MAAM;IACJE,WAAW;IAAEC,KAAK;IAAEC,EAAE;IAAEC,UAAU;IAAEC;EACtC,CAAC,GAAGL,GAAG;EACP,MAAM;IAAEM,qBAAqB;IAAEC;EAAe,CAAC,GAAGd,UAAU,CAACI,gBAAgB,CAAC;EAE9E,oBACEL,KAAA,CAAAgB,aAAA,CAAAhB,KAAA,CAAAiB,QAAA,qBACEjB,KAAA,CAAAgB,aAAA;IAAA,GAAQP,WAAW,CAAC;MAClBS,SAAS,EAAEf,UAAU,CAAC;QACpB,qBAAqB,EAAE,IAAI;QAC3B,aAAa,EAAES;MACjB,CAAC;IACH,CAAC;EAAC,GAECF,KAAK,CAACS,GAAG,CAACC,IAAI,iBAAIpB,KAAA,CAAAgB,aAAA,CAACZ,SAAS;IAAA,GAAKgB,IAAI;IAAEC,GAAG,EAAE,GAAGD,IAAI,CAACE,MAAM,CAACC,MAAM,GAAGZ,EAAE;EAAG,CAAE,CAAC,CAC3E,CAAC,EACJE,UAAU,IAAIC,qBAAqB,gBAClCd,KAAA,CAAAgB,aAAA,0BACEhB,KAAA,CAAAgB,aAAA;IAAIQ,OAAO,EAAET,cAAc,CAACU;EAAO,GAChCX,qBAAqB,CAAC;IAAEN;EAAI,CAAC,CAC5B,CACF,CAAC,GACH,IACJ,CAAC;AAEP;AAEAF,QAAQ,CAACoB,SAAS,GAAG;EACnB;EACAlB,GAAG,EAAEN,SAAS,CAACyB,KAAK,CAAC;IACnB;IACAlB,WAAW,EAAEP,SAAS,CAAC0B,IAAI,CAACC,UAAU;IACtC;IACAnB,KAAK,EAAER,SAAS,CAAC4B,OAAO,CAAC5B,SAAS,CAACyB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAACE,UAAU;IACxD;IACAlB,EAAE,EAAET,SAAS,CAAC6B,MAAM,CAACF,UAAU;IAC/B;IACAjB,UAAU,EAAEV,SAAS,CAAC8B,IAAI;IAC1B;IACAnB,UAAU,EAAEX,SAAS,CAAC8B;EACxB,CAAC,CAAC,CAACH;AACL,CAAC;AAED,eAAevB,QAAQ","ignoreList":[]}