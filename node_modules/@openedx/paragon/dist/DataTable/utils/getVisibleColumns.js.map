{"version":3,"file":"getVisibleColumns.js","names":["React","useMemo","useContext","useEffect","CheckboxControl","DataTableContext","useConvertIndeterminateProp","selectColumn","id","Header","_ref","getToggleAllPageRowsSelectedProps","getToggleAllRowsSelectedProps","page","isSelectable","maxSelectedRows","toggleRowsSelectedProps","getToggleRowsSelectedProps","updatedProps","formatMaxSelectedRows","Math","max","createElement","className","Cell","_ref2","row","onMaxSelectedRows","state","selectedRowIds","selectedRowsOrdered","getToggleRowSelectedProps","index","isRowSelected","selectedRowsLength","Object","keys","length","hasMaxSelectedRows","disableCheck","lastRowSelected","disabled","disableSortBy","getVisibleColumns","visibleColumns","additionalColumns","arguments","undefined","manualSelectColumn","columns","push","concat"],"sources":["../../../src/DataTable/utils/getVisibleColumns.jsx"],"sourcesContent":["import React, { useMemo, useContext, useEffect } from 'react';\n\nimport { CheckboxControl } from '../../Form';\nimport DataTableContext from '../DataTableContext';\nimport useConvertIndeterminateProp from './useConvertIndeterminateProp';\n\nexport const selectColumn = {\n  id: 'selection',\n  // The header can use the table's getToggleAllPageRowsSelectedProps or getToggleAllRowsSelectedProps\n  // method to render a checkbox. The method is determined based on whether pagination is enabled or\n  // not (i.e., ``page`` is defined).\n  // Proptypes disabled as these props are passed in separately\n  /* eslint-disable-next-line react/prop-types */\n  Header: ({ getToggleAllPageRowsSelectedProps, getToggleAllRowsSelectedProps, page }) => {\n    const { isSelectable, maxSelectedRows } = useContext(DataTableContext);\n    const toggleRowsSelectedProps = useMemo(\n      () => {\n        // determine if this selection is for an individual page or the entire table\n        const getToggleRowsSelectedProps = page ? getToggleAllPageRowsSelectedProps : getToggleAllRowsSelectedProps;\n        return getToggleRowsSelectedProps();\n      },\n      [getToggleAllPageRowsSelectedProps, getToggleAllRowsSelectedProps, page],\n    );\n    const updatedProps = useConvertIndeterminateProp(toggleRowsSelectedProps);\n    const formatMaxSelectedRows = Math.max(0, maxSelectedRows);\n\n    if (isSelectable && formatMaxSelectedRows >= 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"pgn__data-table__controlled-select\">\n        <CheckboxControl\n          {...updatedProps}\n          data-testid=\"datatable-select-column-checkbox-header\"\n        />\n      </div>\n    );\n  },\n  // The cell can use the individual row's getToggleRowSelectedProps method\n  // to the render a checkbox\n  // Proptypes disabled as this prop is passed in separately\n  /* eslint-disable react/prop-types */\n  Cell: ({ row }) => {\n    const {\n      isSelectable, maxSelectedRows, onMaxSelectedRows, state: { selectedRowIds, selectedRowsOrdered },\n    } = useContext(DataTableContext);\n    const updatedProps = useConvertIndeterminateProp(row.getToggleRowSelectedProps());\n    const { index } = row;\n    const isRowSelected = index in selectedRowIds;\n    const selectedRowsLength = Object.keys(selectedRowIds).length;\n    const formatMaxSelectedRows = Math.max(0, maxSelectedRows);\n    const hasMaxSelectedRows = formatMaxSelectedRows === selectedRowsLength;\n    const disableCheck = isSelectable && hasMaxSelectedRows && !isRowSelected;\n    const lastRowSelected = selectedRowsOrdered?.[selectedRowsOrdered.length - 1] ?? null;\n\n    useEffect(() => {\n      if (hasMaxSelectedRows && lastRowSelected === index) {\n        onMaxSelectedRows?.();\n      }\n    }, [hasMaxSelectedRows, index, isRowSelected, lastRowSelected, onMaxSelectedRows, selectedRowIds]);\n\n    return (\n      <div className=\"pgn__data-table__controlled-select\">\n        <CheckboxControl\n          {...updatedProps}\n          disabled={disableCheck}\n          data-testid=\"datatable-select-column-checkbox-cell\"\n        />\n      </div>\n    );\n  },\n  /* eslint-enable react/prop-types */\n  disableSortBy: true,\n};\n\nconst getVisibleColumns = (\n  isSelectable,\n  visibleColumns,\n  additionalColumns = [],\n  manualSelectColumn = selectColumn,\n) => {\n  let columns = [];\n  if (isSelectable) {\n    columns.push(manualSelectColumn);\n  }\n  columns = columns.concat(visibleColumns);\n  if (additionalColumns.length > 0) {\n    columns = columns.concat(additionalColumns);\n  }\n  return columns;\n};\n\nexport default getVisibleColumns;\n"],"mappings":"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","ignoreList":[]}