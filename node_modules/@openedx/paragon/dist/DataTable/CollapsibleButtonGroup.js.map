{"version":3,"file":"CollapsibleButtonGroup.js","names":["React","useContext","useMemo","useState","PropTypes","MoreVert","useToggle","useWindowSize","DataTableContext","Icon","IconButton","breakpoints","ModalPopup","Stack","Button","ACTION_OVERFLOW_BUTTON_TEXT","SMALL_SCREEN_ACTION_OVERFLOW_BUTTON_TEXT","CollapsibleButtonGroup","_ref","className","actions","rest","isOverflowMenuOpen","openOverflowMenu","closeOverflowMenu","overflowMenuTarget","setOverflowMenuTarget","controlledTableSelections","isEntireTableSelected","selectedFlatRows","rows","width","selectedRows","visibleActions","dropdownActions","small","minWidth","firstTwoActions","splice","extraActions","slice","reverse","cloneAction","action","index","cloneElement","component","key","as","args","createElement","length","Fragment","variant","iconAs","src","alt","id","ref","onClick","positionRef","onClose","placement","isOpen","gap","map","defaultProps","propTypes","string","arrayOf","shape","oneOfType","element","elementType","isRequired"],"sources":["../../src/DataTable/CollapsibleButtonGroup.jsx"],"sourcesContent":["import React, { useContext, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { MoreVert } from '../../icons';\nimport useToggle from '../hooks/useToggleHook';\nimport useWindowSize from '../hooks/useWindowSizeHook';\nimport DataTableContext from './DataTableContext';\nimport Icon from '../Icon';\nimport IconButton from '../IconButton';\nimport breakpoints from '../utils/breakpoints';\nimport ModalPopup from '../Modal/ModalPopup';\nimport Stack from '../Stack';\nimport Button from '../Button';\n\nexport const ACTION_OVERFLOW_BUTTON_TEXT = 'More actions';\nexport const SMALL_SCREEN_ACTION_OVERFLOW_BUTTON_TEXT = 'Actions';\n\nfunction CollapsibleButtonGroup({\n  className,\n  actions,\n  ...rest\n}) {\n  const [isOverflowMenuOpen, openOverflowMenu, closeOverflowMenu] = useToggle(false);\n  const [overflowMenuTarget, setOverflowMenuTarget] = useState(null);\n  const {\n    controlledTableSelections: [{ isEntireTableSelected }],\n    selectedFlatRows,\n    rows,\n  } = useContext(DataTableContext);\n  const { width } = useWindowSize();\n  const selectedRows = selectedFlatRows || rows;\n\n  const [visibleActions, dropdownActions] = useMemo(() => {\n    if (width < breakpoints.small.minWidth) {\n      // On a small screen, all actions will be in the overflow menu\n      return [[], [...actions]];\n    }\n    // The first two actions will be displayed as buttons, the rest will go in an overflow menu\n    const firstTwoActions = [...actions].splice(0, 2);\n    const extraActions = [...actions].slice(2);\n\n    /*  Reversing the array because to the user it makes sense to put the primary button first,\n        but we want it on the right */\n    return [firstTwoActions.reverse(), extraActions];\n  }, [actions, width]);\n\n  if (!isEntireTableSelected && !selectedRows) {\n    return null;\n  }\n\n  const cloneAction = (action, index) => React.cloneElement(\n    action.component,\n    {\n      // eslint-disable-next-line react/no-array-index-key\n      key: `${action}${index}`,\n      as: Button, // for backwards compatibility this is needed\n      ...action.args,\n    },\n  );\n\n  return (\n    <div className={className} {...rest}>\n      {dropdownActions.length > 0 && (\n        <>\n          <IconButton\n            variant=\"secondary\"\n            iconAs={Icon}\n            src={MoreVert}\n            alt={width > breakpoints.small.minWidth\n              ? ACTION_OVERFLOW_BUTTON_TEXT : SMALL_SCREEN_ACTION_OVERFLOW_BUTTON_TEXT}\n            id=\"actions-dropdown\"\n            ref={setOverflowMenuTarget}\n            onClick={openOverflowMenu}\n          />\n          <ModalPopup\n            positionRef={overflowMenuTarget}\n            onClose={closeOverflowMenu}\n            placement=\"bottom-end\"\n            isOpen={isOverflowMenuOpen}\n          >\n            <div className=\"pgn__data-table__overflow-actions-menu\">\n              <Stack gap={2}>\n                {dropdownActions.map(cloneAction)}\n              </Stack>\n            </div>\n          </ModalPopup>\n        </>\n      )}\n      <div className=\"pgn__data-table__visible-actions\">\n        {visibleActions.map(cloneAction)}\n      </div>\n    </div>\n  );\n}\n\nCollapsibleButtonGroup.defaultProps = {\n  className: null,\n};\n\nCollapsibleButtonGroup.propTypes = {\n  /** Class names for the div wrapping the button components */\n  className: PropTypes.string,\n  /** Array of action objects, containing a component and their callback args */\n  actions: PropTypes.arrayOf(PropTypes.shape({\n    component: PropTypes.oneOfType([PropTypes.element, PropTypes.elementType]).isRequired,\n    args: PropTypes.shape({}),\n  })).isRequired,\n};\n\nexport default CollapsibleButtonGroup;\n"],"mappings":"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","ignoreList":[]}